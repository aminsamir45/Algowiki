Old Family #,Family Name,Variation,Alias,Parents,Children,Problem Description,Description Reference,Parameters,Parameter for graphs,Input Size,Output Size,Best Known Upper Bound,Upper Bound Reference,Best Known Lower Bound,Lower Bound Reference,Domain,,,,
1,Sorting,Sorting,,,Comparison Sorting; Non-Comparison Sorting; ,A sorting algorithm is an algorithm that puts elements of a list in a certain order,https://www.researchgate.net/profile/Adolf-Fenyi-2/publication/346468901_Comparative_Analysis_of_Comparison_and_Non_Comparison_based_Sorting_Algorithms/links/62d80a6c492b5a42c7c3715c/Comparative-Analysis-of-Comparison-and-Non-Comparison-based-Sorting-Algorithms.pdf,$n$: size of list,n,n,n,,,,,Combinatorics,,,,
1,Sorting,Comparison Sorting,,Sorting,,"A sorting algorithm is an algorithm that puts elements of a list in a certain order, using comparisons between elements.",https://www.researchgate.net/profile/Adolf-Fenyi-2/publication/346468901_Comparative_Analysis_of_Comparison_and_Non_Comparison_based_Sorting_Algorithms/links/62d80a6c492b5a42c7c3715c/Comparative-Analysis-of-Comparison-and-Non-Comparison-based-Sorting-Algorithms.pdf,$n$: size of list,n,n,n,O(n*logn),CLRS,Omega(n*logn),CLRS,Combinatorics,,,,
1,Sorting,Non-Comparison Sorting,,Sorting,,"A sorting algorithm is an algorithm that puts elements of a list in a certain order, not using comparisons between elements (so elements are typically integers or real numbers).",https://www.researchgate.net/profile/Adolf-Fenyi-2/publication/346468901_Comparative_Analysis_of_Comparison_and_Non_Comparison_based_Sorting_Algorithms/links/62d80a6c492b5a42c7c3715c/Comparative-Analysis-of-Comparison-and-Non-Comparison-based-Sorting-Algorithms.pdf,$n$: size of list,n,n,n,,,,,Combinatorics,,,,
2,kth Order Statistic,kth Order Statistic,,,,"An algorithm seeks to find the $k^{th}$ order statistic of a statistical sample, or the $k^{th}$-smallest value in a list or array.",https://dl.acm.org/citation.cfm?doid=366622.366647,$n$: size of list,n,n,O(1),O(n),https://11011110.github.io/blog/2007/10/09/blum-style-analysis-of.html,Omega(n),Easily derived,Combinatorics,,,,
3,Matrix Chain Multiplication,Matrix Chain Ordering Problem,MCOP,,Approximate MCOP; ,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an optimization problem. Given a sequence of matrices, the goal is to find the most efficient way to multiply these matrices.",https://dl.acm.org/doi/pdf/10.1145/359545.359556,$n$: number of matrices,n,O(n),O(n),$O(n \log n)$,https://citeseerx.ist.psu.edu/viewdoc/citations?doi=10.1.1.695.2923,Omega(n),Easily derived,Combinatorics,,,,
3,Matrix Chain Multiplication,Approximate MCOP,,Matrix Chain Ordering Problem,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an optimization problem. Given a sequence of matrices, the goal is to find the most efficient way to multiply these matrices. In the approximation problem, the matrix multiplication carried out with the output result will use a number of operations that has some sort of upper bound based on the optimal solution.",https://dl.acm.org/doi/pdf/10.1145/359545.359556,$n$: number of matrices,n,O(n),O(n),$O(\log \log n)$,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,,,Combinatorics,,,,
3,Matrix Chain Multiplication,Matrix Chain Scheduling Problem,MCSP,,Approximate MCSP; ,The Matrix Chain Scheduling Problem (or MCSP) is an optimization problem where the goal is to find the product sequence for evaluating a chain of matrix products and the processor schedule for the sequence such that the evaluation time is minimized on a parallel system.,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.56.222&rep=rep1&type=pdf,"$P$: number of processors
$n$: number of matrices",n,O(n),O(n),$O(\log^3 n)$,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.54.9426&rep=rep1&type=pdf,NP-hard,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.56.222&rep=rep1&type=pdf,Combinatorics,,,,
3,Matrix Chain Multiplication,Approximate MCSP,,Matrix Chain Scheduling Problem,,"The Matrix Chain Scheduling Problem (or MCSP) is an optimization problem where the goal is to find the product sequence for evaluating a chain of matrix products and the processor schedule for the sequence such that the evaluation time is minimized on a parallel system. In the approximation problem, the matrix multiplication carried out with the output result will use a number of operations that has some sort of upper bound based on the optimal solution.",https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.56.222&rep=rep1&type=pdf,"$P$: number of processors
$n$: number of matrices",n,O(n),O(n),$O(n^2)$,http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.56.222&rep=rep1&type=pdf,,,Combinatorics,,,,
4,Longest Common Subsequence,Longest Common Subsequence,LCS,,Longest Common Substring with don't cares; ,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/HuSz77.pdf,"$n$: length of the longer input string
$m$: length of the shorter input string
$r$: length of the LCS
$s$: size of the alphabet
$p$: the number of dominant matches (AKA number of minimal candidates), i.e. the total number of ordered pairs of positions at which the two sequences match",m+n,m+n,"O(min(m, n))",,,Omega(n^2),"Reduction from SETH

https://link.springer.com/chapter/10.1007/978-3-662-43948-7_4",Combinatorics,,,,
4,Longest Common Subsequence,Longest Common Substring with don't cares,,Longest Common Subsequence,,"Find the length of the longest common substring of two strings S and T, where S is a binary string and T is is a binary string and additional * characters that can match either 0 or 1.",https://link.springer.com/chapter/10.1007/978-3-662-43948-7_4,"$n$: length of the longer input string
$m$: length of the shorter input string
$r$: length of the LCS
$s$: size of the alphabet
$p$: the number of dominant matches (AKA number of minimal candidates), i.e. the total number of ordered pairs of positions at which the two sequences match",m+n,m+n,"O(min(m, n))",,,Omega(n^2),"Reduction from SETH

https://link.springer.com/chapter/10.1007/978-3-662-43948-7_4",Combinatorics,,,,
5,Maximum Flow,st-Maximum Flow,,,,Find the maximum flow from $s$ to $t$,https://dl.acm.org/doi/abs/10.1145/3212510,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge capacity",V,O(ElogU),"O(1) for value, O(ElogU) for network",,,,,Combinatorics,,,,
5,Maximum Flow,Integer Maximum Flow,,Non-Integer Maximum Flow,Unweighted Maximum Flow; ,"Maximum flow problems involve finding a feasible flow through a flow network that is maximum. In this variant, the capacities must be integers.",https://dl.acm.org/doi/abs/10.1145/3212510,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge capacity",V,O(ElogU),"O(1) for value, O(ElogU) for network","O(min(VE, E^(1+o(1))*log(U)))","https://arxiv.org/abs/2203.00671, 
https://dl.acm.org/doi/10.1145/2488608.2488705",,,Combinatorics,,,,
5,Maximum Flow,Unweighted Maximum Flow,,Integer Maximum Flow,,"Maximum flow problems involve finding a feasible flow through a flow network that is maximum. In this variant, all edges have unit weight.",https://dl.acm.org/doi/abs/10.1145/3212510,"$V$: number of vertices
$E$: number of edges",V,O(E),"O(1) for value, O(E) for network",O(E^(1+o(1))),https://arxiv.org/abs/2203.00671,,,Combinatorics,,,,
5,Maximum Flow,Non-integer Maximum Flow,,,Integer Maximum Flow; ,"Maximum flow problems involve finding a feasible flow through a flow network that is maximum. In this variant, the capacities may be non-integers.",https://dl.acm.org/doi/abs/10.1145/3212510,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge capacity",V,O(ElogU),"O(1) for value, O(ElogU) for network",,,,,Combinatorics,,,,
5,Maximum Flow,Minimum-Cost Flow,MCF,,,"Maximum flow problems involve finding a feasible flow through a flow network that is maximum. In this variant, each edge is given a cost coefficient, and we wish to minimize total cost while reaching a threshold flow.",https://www.tandfonline.com/doi/pdf/10.1080/10556788.2014.895828,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge capacity
$d$: minimum required flow",V,O(ElogU),"O(1) for value, O(ElogU) for network",O(E^(1+o(1))*log(U)),https://arxiv.org/abs/2203.00671,,,Combinatorics,,,,
5,Maximum Flow,All-Pairs Maximum Flow,,,,Find the maximum flow between all pairs of nodes,https://dl.acm.org/doi/abs/10.1145/3212510,"$V$: number of vertices
$E$: number of edges",V,,,,,,,Combinatorics,,,,
5,Maximum Flow,Maximum Local Edge Connectivity,,,,Find the pair of nodes with the maximum number of edge-disjoint paths between them,https://dl.acm.org/doi/abs/10.1145/3212510,"$V$: number of vertices
$E$: number of edges",V,,,,,,"reduction from SETH

https://dl.acm.org/doi/abs/10.1145/3212510",Combinatorics,,,,
6,Matrix Product,Matrix Multiplication,,,Boolean Matrix Multiplication; Matrix Product Verification; ,Matrix Multiplication or Matrix Product is a binary operation that produces a matrix from two matrices with entries in a field; or; more generally; in a ring or even a semiring. ,https://era.ed.ac.uk/bitstream/handle/1842/4734/Stothers2010.pdf,$n$: dimension of square matrix,n^2,O(n^2),O(n^2),O(n^2.37285956),https://arxiv.org/pdf/2010.05846.pdf,Omega(n^2),Easily derived,Combinatorics,,,,
6,Matrix Product,Boolean Matrix Multiplication,BMM; and-or Matrix Product,Matrix Multiplication,Boolean Matrix Multiplication (Combinatorial); ,Matrix multiplication of two boolean matrices (i.e. where all entries are in $F_2$ and addition is mod 2),https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4569672,$n$: dimension of square matrix,n^2,O(n^2),O(n^2),O(n^2.37285956),https://arxiv.org/pdf/2010.05846.pdf,Omega(n^2),Easily derived,Combinatorics,,,,
6,Matrix Product,Boolean Matrix Multiplication (Combinatorial),BMM (Combinatorial),Boolean Matrix Multiplication,,"Matrix multiplication of two boolean matrices (i.e. where all entries are in $F_2$ and addition is mod 2). Here, only ""combinatorial"" algorithms are considered.",https://dl.acm.org/doi/pdf/10.1145/3186893,$n$: dimension of square matrix,n^2,O(n^2),O(n^2),O(n^3*poly(log log n)/log^4 n),https://www.sciencedirect.com/science/article/pii/S0890540118300099,$\Omega(n^{3-\epsilon})$ for any $\epsilon > 0$ for combinatorial algorithms,BMM Hypothesis,Combinatorics,,,,
6,Matrix Product,Matrix Product Verification,,Matrix Multiplication,,"Given three matrices $A, B, C$, verify that $AB = C$, i.e. that $C$ is the matrix product of $A$ and $B$",https://dl.acm.org/doi/pdf/10.1145/3186893,$n$: dimension of square matrix,n^2,O(n^2),O(1),,,,,Combinatorics,,,,
6,Matrix Product,Distance Product,"$(\min, +)$ Matrix Multiplication; $(\min, +)$ Matrix Product; Funny Matrix Multiplication",,,"Matrix product over the $(\min, +)$-semiring",https://dl.acm.org/doi/pdf/10.1145/3186893,$n$: dimension of square matrix,n^2,O(n^2),O(n^2),,,,,Combinatorics,,,,
6,Matrix Product,"$(\min, \leq)$ Product","$(\min, \leq)$ Matrix Multiplication",,,"Matrix product over the $(\min, \leq)$-semiring",https://dl.acm.org/doi/pdf/10.1145/3186893,$n$: dimension of square matrix,n^2,O(n^2),O(n^2),,,,,Combinatorics,,,,
9,Linear System,General Linear System,,,"Sparse Linear System; Positive Definite, Hermitian Matrix; Non-Definite, Symmetric Matrix; Toeplitz Matrix; Vandermonde Matrix; ","A system of linear equations (or linear system) is a collection of one or more linear equations involving the same set of variables. This is typically written in the form $Ax=b$ where $A$ is a matrix and $x, b$ are vectors. In this case, we impose no restrictions on $A$.",https://wires.onlinelibrary.wiley.com/doi/pdfdirect/10.1002/wics.164,"$n$: number of variables and number of equations
$m$: number of nonzero entries in matrix
$k$: ratio between largest and smallest eigenvalues",n^2,O(n^2),O(n),O(n^2.37285956),Matrix inverse (which has the same complexity as matrix multiplication),Omega(n^2),Easily derived,Numerical Analysis,,,,
9,Linear System,Sparse Linear System,,General Linear System,,"In this case, we restrict $A$ to be sparse (i.e. $A$ only has $O(n)$ nonzero entries).",https://arxiv.org/pdf/0811.3171.pdf,"$n$: number of variables and number of equations
$m$: number of nonzero entries in matrix
$k$: ratio between largest and smallest eigenvalues",n^2,O(m),O(n),"O(n^2.37285956) deterministic, O(n^2.331642) randomized/roughly approximate",https://arxiv.org/abs/2007.10254,Omega(n),Easily derived,Numerical Analysis,,,,
9,Linear System,"Positive Definite, Hermitian Matrix",,General Linear System,,"In this case, we restrict $A$ to be positive definite and hermitian (or symmetric, if $A$ is real-valued).",https://www.cs.utexas.edu/users/flame/Notes/NotesOnChol.pdf,"$n$: number of variables and number of equations
$m$: number of nonzero entries in matrix
$k$: ratio between largest and smallest eigenvalues",n^2,O(n^2),O(n),O(n^2.37285956),Matrix inverse (which has the same complexity as matrix multiplication),Omega(n^2),Easily derived,Numerical Analysis,,,,
9,Linear System,"Non-Definite, Symmetric Matrix",,General Linear System,,"In this case, we restrict $A$ to be non-definite and symmetric.",https://link.springer.com/article/10.1007/BF01931804,"$n$: number of variables and number of equations
$m$: number of nonzero entries in matrix
$k$: ratio between largest and smallest eigenvalues",n^2,O(n^2),O(n),O(n^2.37285956),Matrix inverse (which has the same complexity as matrix multiplication),Omega(n^2),Easily derived,Numerical Analysis,,,,
9,Linear System,Toeplitz Matrix,,General Linear System,,"In this case, we restrict $A$ to be a Toeplitz matrix.",https://link.springer.com/content/pdf/10.1007/BF02163269.pdf,"$n$: number of variables and number of equations
$m$: number of nonzero entries in matrix
$k$: ratio between largest and smallest eigenvalues",n^2,O(n),O(n),"min(O(n^2), C*O(n*log^2(n)))",https://en.wikipedia.org/wiki/Levinson_recursion,Omega(n),Easily derived,Numerical Analysis,,,,
9,Linear System,Vandermonde Matrix,,General Linear System,,"In this case, we restrict $A$ to be a Vandermonde matrix.",https://www.jstor.org/stable/2004623,"$n$: number of variables and number of equations
$m$: number of nonzero entries in matrix
$k$: ratio between largest and smallest eigenvalues",n^2,O(n),O(n),O(n^2),Algorithm #108,Omega(n),Easily derived,Numerical Analysis,,,,
10,Linear Programming,General Linear Programming,,,Linear Programming with Reals; ,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,https://books.google.com/books?hl=en&lr=&id=DTjPAAAAQBAJ&oi=fnd&pg=PP1&dq=general+linear+programming&ots=vD4ZikjK9Z&sig=hKNx-yjfv4eztlHMjbWBIEWhfGA#v=onepage&q=general%20linear%20programming&f=false,"$n$: number of variables
$m$: number of constraints
$L$: length of input, in bits",n,O(L),"O(1) for value, ~O(n) for variable values",,,,,Numerical Analysis,,,,
10,Linear Programming,Linear Programming with Reals,,General Linear Programming,Integer Linear Programming; ,"In this case, we allow all of the variables to be any real number.",https://link.springer.com/content/pdf/10.1007/BF01580859.pdf,"$n$: number of variables
$m$: number of constraints
$L$: length of input, in bits",n,O(L),"O(1) for value, ~O(n) for variable values","O(n^2.37285956*polylog(n, m, L))",https://arxiv.org/abs/1810.07896,,,Numerical Analysis,,,,
10,Linear Programming,Integer Linear Programming,ILP,Linear Programming with Reals,0-1 Linear Programming; ,"In this case, we require all of the variables to be integers.",https://d1wqtxts1xzle7.cloudfront.net/30784929/15023096-libre.pdf?1392035464=&response-content-disposition=inline%3B+filename%3DThree_models_of_fuzzy_integer_linear_pro.pdf&Expires=1661187732&Signature=KJX0f8E8YpE~2X0f4tgDBvqlsPKVldp3BztygETrIDDscwI25~PAsRrtZ8JYXgalpEd1vJEuYuUDCyefMcdsMqq0I-yN0l0DOn6AaZhB-Wr-bjzxuorwUjudediDpIFtzK6t6ue30Gy5smKflevKkLzd~C9gDO9wLM7rXs9Qc3Pt3WRq~eyXrNERyyX8nQCj3-FtOFPVWttivVFqKopzQ7zHUnkMsSQ9~TOyB58tJX5mjZ0qwTnG-E5WdkYIcxSqFFMvQciOztMjOw4ztTOoaR-bK4zm23a~Rhmy9YnvyN6H807Dn4R7Gz2HhIi7fBpZKuN7TRUUDLZoYF3E6AhV1g__&Key-Pair-Id=APKAJLOHF5GGSLRBV4ZA,"$n$: number of variables
$m$: number of constraints
$L$: length of input, in bits",n,O(L),"O(1) for value, ~O(n) for variable values",,,"Omega(poly(n, m, L))",NP-hard,Numerical Analysis,,,,
10,Linear Programming,0-1 Linear Programming,,Integer Linear Programming,,"In this case, we require all of the variables to be either 0 or 1.",https://www.jstor.org/stable/pdf/2628745.pdf,"$n$: number of variables
$m$: number of constraints
$L$: length of input, in bits",n,O(L),"O(1) for value, ~O(n) for variable values",,,"Omega(poly(n, m, L))",NP-hard,Numerical Analysis,,,,
11,Line segment intersection,"Reporting all intersection points, line segments",,"Reporting all intersection points, generalized segments","Counting number of intersection points, line segments; ","The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any. In this case, we wish to report all points of intersection.",https://dl.acm.org/doi/10.1145/147508.147511,"$n$: number of line segments
$k$: number of points of intersection",n,O(n),O(k),O(n*log(n)+k),https://dl.acm.org/doi/10.1145/147508.147511,Omega(n*log(n)+k),Reduction from element uniqueness (see https://dl.acm.org/doi/10.1145/304893.304991),Image Processing,,,,
11,Line segment intersection,"Reporting all intersection points, generalized segments",,,"Reporting all intersection points, line segments; ","In this case, the segments are generalized (i.e. have algebraic degree ≥1); we still wish to report all points of intersection.",https://epubs.siam.org/doi/abs/10.1137/S0097539797329373,"$n$: number of line segments
$k$: number of points of intersection",n,O(n),O(k),O(n*log(n)+k),https://dl.acm.org/citation.cfm?id=304991,Omega(n*log(n)+k),Reduction from element uniqueness (see https://dl.acm.org/doi/10.1145/304893.304991),Image Processing,"<= slightly imprecise and possibly outdated here (particularly for upper bound), due to algorithms mostly solving for lower degree",,,
11,Line segment intersection,"Reporting all intersection points, convex polygons",,"Reporting all intersection points, general polygons",,"In this case, we are supplied with a list of convex polygons, and we wish to report all regions of intersection.",https://pdfs.semanticscholar.org/a571/cc92218132a1b0e65c2adbf663c79d015737.pdf,"$n$: number of line segments
$k$: number of points of intersection",n,O(n),O(k),O(n*log(n)+k),https://pdfs.semanticscholar.org/a571/cc92218132a1b0e65c2adbf663c79d015737.pdf,,,Image Processing,,,,
11,Line segment intersection,"Reporting all intersection points, general polygons",,,"Reporting all intersection points, convex polygons; ","In this case, we are supplied with a list of polygons (not necessarily convex), and we wish to report all regions of intersection.",https://pdfs.semanticscholar.org/a571/cc92218132a1b0e65c2adbf663c79d015737.pdf,"$n$: number of line segments
$k$: number of points of intersection",n,O(n),O(k),O((n+k)*log(n)),https://pdfs.semanticscholar.org/a571/cc92218132a1b0e65c2adbf663c79d015737.pdf,,,Image Processing,,,,
11,Line segment intersection,"Counting number of intersection points, line segments",,"Reporting all intersection points, line segments",,"In this case, we are supplied with a list of line segments, and we wish to count the number of points of intersection.",https://www.sciencedirect.com/science/article/pii/0022000086900255,"$n$: number of line segments
$k$: number of points of intersection",n,O(n),O(log k),"O(min(n^1.695, n*log(n)+k))",https://www.sciencedirect.com/science/article/pii/0022000086900255,,,Image Processing,<= upper bound ref is for n^1.695,,,
12,Convex Hull,2-dimensional Convex Hull,,d-dimensional Convex Hull,"2-dimensional Convex Hull, Online; 2-dimensional Convex Hull, Dynamic; ","The convex hull or convex envelope or convex closure of a set X of points in the Euclidean plane or in a Euclidean space (or; more generally; in an affine space over the reals) is the smallest convex set that contains X. Here, we are looking at the 2-dimensional case.",https://dl.acm.org/doi/10.1145/359423.359430,"$n$: number of line segments
$h$: number of points on the convex hull",n,O(n),O(h),O(n*log(h)),https://ecommons.cornell.edu/handle/1813/6417,Omega(n*log(h)),https://ecommons.cornell.edu/handle/1813/6417,Image Processing,For more on convex hull algos in general see https://link.springer.com/chapter/10.1007/978-1-4612-1098-6_3,,,
12,Convex Hull,3-dimensional Convex Hull,,d-dimensional Convex Hull,,"Here, we are looking at the 3-dimensional case.",https://dl.acm.org/doi/10.1145/359423.359430,"$n$: number of line segments
$h$: number of points on the convex hull",n,O(n),O(h),O(n*log(h)),https://link.springer.com/article/10.1007/BF02712873,Omega(n*log(h)),Reduction to 2-dimensional case,Image Processing,,,,
12,Convex Hull,d-dimensional Convex Hull,,,2-dimensional Convex Hull; 3-dimensional Convex Hull; ,"Here, we are looking at the general d-dimensional case.",https://dl.acm.org/doi/pdf/10.1145/12130.12172,"$n$: number of line segments
$h$: number of points on the convex hull
$f_1$: number of facets on the convex hull
$f_2$: number of subfacets on the convex hull",n,O(n),O(h),,,,,Image Processing,,,,
12,Convex Hull,"2-dimensional Convex Hull, Online",,2-dimensional Convex Hull,,"Here, we are given the input points one by one, and must maintain the current convex hull after each input point.",https://dl.acm.org/doi/abs/10.1145/359131.359132,"$n$: number of line segments
$h$: number of points on the convex hull",n,O(n),O(h),"O(log(n)) per operation, O(n*log(n)) total",https://dl.acm.org/doi/abs/10.1145/359131.359132,"Omega(log(n)) per operation, Omega(n*log(n)) total",https://link.springer.com/content/pdf/10.1007/978-1-4612-1098-6.pdf,Image Processing,,,,
12,Convex Hull,"2-dimensional Convex Hull, Dynamic",,2-dimensional Convex Hull,,"Here, the input points may be sequentially inserted or deleted, and the convex hull must be updated after each insert/delete operation.",https://www.sciencedirect.com/science/article/pii/002200008190012X?via%3Dihub,"$n$: number of line segments
$h$: number of points on the convex hull",n,O(n),O(h),,,,,Image Processing,<= for more see https://en.wikipedia.org/wiki/Dynamic_convex_hull,,,
13,Strongly Connected Components,Strongly Connected Components,SCCs,,,The strongly connected components or diconnected components of an arbitrary directed graph form a partition into subgraphs that are themselves strongly connected.,https://ieeexplore.ieee.org/abstract/document/6979028?casa_token=daaoBjrHUa4AAAAA:DCjk_WMWZ5Is6KvGpmS8a2bL9LskvV0P1zEG4U2u-Tm_C8sixu1w65OpTyjml1HEpaikXhtYsg,"$V$: number of vertices
$E$: number of edges",V,O(V+E),O(V+E),O(V+E),Many algorithms,Omega(V+E),Easily derived,Combinatorics,,,,
13,Strongly Connected Components,Transitive Closure,,,,"In this problem, we also want to compute the transitive closure of a graph. (Perhaps this should be a separate problem?)",https://link.springer.com/article/10.1007/BF01940892,"$V$: number of vertices
$E$: number of edges",V,O(V+E),O(V^2),,,,,Combinatorics,,,,
13,Strongly Connected Components,Maximum Strongly Connected Component,MaxSCC,,,"maintain: a directed graph, under: edge insertions/deletions, answer: what is the size of the largest SCC?",https://ieeexplore.ieee.org/abstract/document/6979028?casa_token=daaoBjrHUa4AAAAA:DCjk_WMWZ5Is6KvGpmS8a2bL9LskvV0P1zEG4U2u-Tm_C8sixu1w65OpTyjml1HEpaikXhtYsg,"$V$: number of vertices
$E$: number of edges",V,,,,,,,Combinatorics,,,,
13,Strongly Connected Components,Strong Connectivity (dynamic),,,,"maintain: a directed graph, under edge insertions/deletions, answer: is the graph strongly connected?",https://ieeexplore.ieee.org/abstract/document/6979028?casa_token=daaoBjrHUa4AAAAA:DCjk_WMWZ5Is6KvGpmS8a2bL9LskvV0P1zEG4U2u-Tm_C8sixu1w65OpTyjml1HEpaikXhtYsg,"$V$: number of vertices
$E$: number of edges",V,,,,,,,Combinatorics,,,,
13,Strongly Connected Components,2 Strong Components (dynamic),SC2,,,"maintain: a directed graph, under: edge insertion/deletions, answer: are there more than 2 strongly connected components?",https://ieeexplore.ieee.org/abstract/document/6979028?casa_token=daaoBjrHUa4AAAAA:DCjk_WMWZ5Is6KvGpmS8a2bL9LskvV0P1zEG4U2u-Tm_C8sixu1w65OpTyjml1HEpaikXhtYsg,"$V$: number of vertices
$E$: number of edges",V,,,,,,,Combinatorics,,,,
13,Strongly Connected Components,Connected Subgraph,ConnSub,,,"Subgraph connectivity asks us to maintainan understanding of connectivity under vertex updates: updates can turn vertices on and off, and queries refer to the subgraph induced by ""on"" vertices. (For instance, this is closer to applications in networks of routers, where node faults may occur.)",https://ieeexplore.ieee.org/abstract/document/6979028?casa_token=daaoBjrHUa4AAAAA:DCjk_WMWZ5Is6KvGpmS8a2bL9LskvV0P1zEG4U2u-Tm_C8sixu1w65OpTyjml1HEpaikXhtYsg,"$V$: number of vertices
$E$: number of edges",V,,,,,,,Combinatorics,,,,
14,Minimum Spanning Tree (MST),"Undirected, General MST",,,"Undirected, Dense MST; Undirected, Planar MST; Undirected, Integer Weights MST; ","A minimum spanning tree (MST) or minimum weight spanning tree is a subset of the edges of a connected; edge-weighted undirected graph that connects all the vertices together; without any cycles and with the minimum possible total edge weight. Here, there are no restrictions on edge weights or graph density.",https://dl.acm.org/citation.cfm?id=2791225,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge weight",V,O(ElogU),O(V),Unknown but matches lower bound,https://dl.acm.org/doi/10.1145/505241.505243,Unknown but matches upper bound,https://dl.acm.org/doi/10.1145/505241.505243,Combinatorics,,,,
14,Minimum Spanning Tree (MST),"Undirected, Dense MST",,"Undirected, General MST",,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset of the edges of a connected; edge-weighted undirected graph that connects all the vertices together; without any cycles and with the minimum possible total edge weight. Here, we assume that the graph is dense (i.e. $E = \Omega(V)$).",https://epubs.siam.org/doi/abs/10.1137/0205051,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge weight",V,O(ElogU),O(V),O(E),https://epubs.siam.org/doi/abs/10.1137/0205051,Omega(E),Easily derived,Combinatorics,,,,
14,Minimum Spanning Tree (MST),"Undirected, Planar MST",,"Undirected, General MST",,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset of the edges of a connected; edge-weighted undirected graph that connects all the vertices together; without any cycles and with the minimum possible total edge weight. Here, we assume that the graph is planar.",https://epubs.siam.org/doi/abs/10.1137/0205051,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge weight",V,O(ElogU),O(V),O(V),https://epubs.siam.org/doi/abs/10.1137/0205051,Omega(V),Easily derived,Combinatorics,,,,
14,Minimum Spanning Tree (MST),"Undirected, Integer Weights MST",,"Undirected, General MST",,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset of the edges of a connected; edge-weighted undirected graph that connects all the vertices together; without any cycles and with the minimum possible total edge weight. Here, we assume that the edges have integer weights, represented in binary.",https://www.sciencedirect.com/science/article/pii/S0022000005800649?via%3Dihub,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge weight",V,O(ElogU),O(V),O(E),https://www.sciencedirect.com/science/article/pii/S0022000005800649?via%3Dihub,Omega(E),Easily derived,Combinatorics,,,,
14,Minimum Spanning Tree (MST),"Directed (Optimum Branchings), General MST",,,"Directed (Optimum Branchings), Super Dense MST; ","A minimum spanning tree (MST) or minimum weight spanning tree is a subset of the edges of a connected; edge-weighted undirected graph that connects all the vertices together; without any cycles and with the minimum possible total edge weight. Here, we're given a directed graph with a root, and we wish to find a spanning arborescence of minimum weight that is rooted at the root.",https://nvlpubs.nist.gov/nistpubs/jres/71b/jresv71bn4p233_a1b.pdf,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge weight",V,O(ElogU),O(V),O(E+VlogV),https://link.springer.com/article/10.1007/BF02579168,Omega(E),Easily derived,Combinatorics,,,,
14,Minimum Spanning Tree (MST),"Directed (Optimum Branchings), Super Dense MST",,"Directed (Optimum Branchings), General MST",,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset of the edges of a connected; edge-weighted undirected graph that connects all the vertices together; without any cycles and with the minimum possible total edge weight. Here, we're given a directed graph with a root and $E=\Omega(V^2)$ edges, and we wish to find a spanning arborescence of minimum weight that is rooted at the root.",https://onlinelibrary.wiley.com/doi/10.1002/net.3230070103,"$V$: number of vertices
$E$: number of edges
$U$: maximum edge weight",V,O(ElogU),O(V),O(V^2),https://onlinelibrary.wiley.com/doi/10.1002/net.3230070103,Omega(V^2),Easily derived,Combinatorics,,,,
15,Closest Pair Problem,"k-dimensional space, $l_m$ (or $l_\infty$) norm",,,"2-dimensional space, $l_m$ (or $l_\infty$) norm; ","Given $n$ points in metric space, typically $k$-dimensional space equipped with $l_m$ (or $l_\infty$) norm, find a pair of points with the smallest distance between them. ",https://dl.acm.org/citation.cfm?id=540196,"$n$: number of points
$k$: dimension of space",n,O(n),O(1),O(kn loglogn+n*3^k) or O(kn logn),Divide-and-conquer or Fortune-Hopcruft algorithm,,,Image Processing,<= has a dynamic version that's worth exploring,,,
15,Closest Pair Problem,"2-dimensional space, $l_m$ (or $l_\infty$) norm",,"k-dimensional space, $l_m$ (or $l_\infty$) norm",,"Given $n$ points in 2-dimensional space equipped with the $l_m$ (or $l_\infty$) norm, find a pair of points with the smallest distance between them. ",https://www.sciencedirect.com/science/article/pii/0020019088901500,"$n$: number of points
$k$: dimension of space",n,,,,,,,Image Processing,,,,
15,Closest Pair Problem,"2-dimensional space, Euclidean metric",,,,"Given $n$ points in 2-dimensional space equipped with the Eucildean metric, find a pair of points with the smallest distance between them. ",https://ieeexplore.ieee.org/document/4567872,"$n$: number of points
$k$: dimension of space",n,,,,,,,Image Processing,,,,
15,Closest Pair Problem,2-dimensional array representation,,,,"Given $n$ points in 2-dimensional space in array representation, find a pair of points with the smallest distance between them. ",https://www.sciencedirect.com/science/article/pii/0020019080900356,"$n$: number of points
$k$: dimension of space",n,,,,,,,Image Processing,,,,
16,Shortest Path (Directed Graphs),General Weights,,,Nonnegative Weights; ,"The shortest path problem is the problem of finding a path between two vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized. Here, the weights can be any real number.",https://apps.dtic.mil/sti/pdfs/AD0422842.pdf,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,O(ElogL),O(V),,,,,Combinatorics,,,,
16,Shortest Path (Directed Graphs),Nonnegative Weights,,general weights,Nonnegative Integer Weights; ,"The shortest path problem is the problem of finding a path between two vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized. Here, the weights are restricted to be nonnegative.",https://www.jstor.org/stable/3007178?seq=1#page_scan_tab_contents,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,O(ElogL),O(V),O(E + V log V),https://www.cs.princeton.edu/courses/archive/fall03/cs528/handouts/fibonacci%20heaps.pdf,,,Combinatorics,,,,
16,Shortest Path (Directed Graphs),Nonnegative Integer Weights,,nonnegative weights,,"The shortest path problem is the problem of finding a path between two vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized. Here, the weights are restricted to be nonnegative integers.",https://doi.org/10.1016/0166-218X(83)90104-X,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,O(ElogL),O(V),"O(E + V min(log log V, log log L))",https://dl.acm.org/doi/10.1016/j.jcss.2004.04.003,,,Combinatorics,,,,
16,Shortest Path (Directed Graphs),Second Shortest Simple Path,,st-Shortest Path,,"Given a weighted digraph $G=(V,E)$, find the second shortest path between two given vertices $s$ and $t$.",https://dl.acm.org/doi/pdf/10.1145/3186893,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,,,,,,,Combinatorics,,,,
16,Shortest Path (Directed Graphs),st-Shortest Path,,,Second Shortest Simple Path; 2-sensitive (7/5)-approximate st-shortest paths; 1-sensitive decremental st-shortest paths; 2-sensitive decremental st-shortest paths; Replacement Paths Problem; ,"Given a weighted digraph $G=(V,E)$, find the shortest path between two given vertices $s$ and $t$.",https://arxiv.org/pdf/1703.01638.pdf,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,,,,,,,Combinatorics,,,,
16,Shortest Path (Directed Graphs),1-sensitive (3/2)-approximate ss-shortest paths,,,,Approximate the single source shortest paths problem within a factor of 3/2 with a sensitivity of 1.,https://arxiv.org/pdf/1703.01638.pdf,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,,,,,,,Combinatorics,,,,
16,Shortest Path (Directed Graphs),2-sensitive (7/5)-approximate st-shortest paths,,st-Shortest Path,,Approximate the st-shortest paths problem within a factor of 7/5 with a sensitivity of 2.,https://arxiv.org/pdf/1703.01638.pdf,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,,,,,,,Combinatorics,,,,
16,Shortest Path (Directed Graphs),1-sensitive decremental st-shortest paths,,st-Shortest Path,,Determine the st-shortest path with a sensitivity of 1 using decremental techniques.,https://arxiv.org/pdf/1703.01638.pdf,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,,,,,,,Combinatorics,,,,
16,Shortest Path (Directed Graphs),2-sensitive decremental st-shortest paths,,st-Shortest Path,,Determine the st-shortest path with a sensitivity of 2 using decremental techniques.,https://arxiv.org/pdf/1703.01638.pdf,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,,,,,,,Combinatorics,,,,
16,Shortest Path (Directed Graphs),Replacement Paths Problem,RPP,st-Shortest Path,,"Given nodes $s$ and $t$ in a weighted directed graph and a shortest path $P$ from $s$ to $t$, compute the length of the shortest simple path that avoids edge $e$, for all edges $e$ on $P$",https://arxiv.org/pdf/1703.01638.pdf,"$V$: number of vertices
$E$: number of edges
$L$: maximum absolute value of edge cost",V,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP,All-Pairs Shortest Paths,,APSP on Dense Directed Graphs with Arbitrary Weights; APSP on Dense Undirected Graphs with Arbitrary Weights; APSP on Geometrically Weighted Graphs; APSP on Dense Undirected Graphs with Positive Integer Weights; APSP on Sparse Directed Graphs with Arbitrary Weights; APSP on Sparse Undirected Graphs with Positive Integer Weights; APSP on Sparse Undirected Graphs with Arbitrary Weights; APSP on Dense Directed Unweighted Graphs; APSP on Dense Undirected Unweighted Graphs; APSP on Sparse Directed Unweighted Graphs; APSP on Sparse Undirected Unweighted Graphs; (5/3)-approximate ap-shortest paths; ,The shortest path problem is the problem of finding a path between two vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.,https://dl.acm.org/doi/10.1145/2591796.2591811,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Dense Directed Graphs with Arbitrary Weights,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is dense ($m = O(n^2)$), is directed, and has arbitrary weights.",https://dl.acm.org/doi/10.1145/2591796.2591811,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Dense Undirected Graphs with Arbitrary Weights,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is dense ($m = O(n^2)$), is undirected, and has arbitrary weights.",https://dl.acm.org/doi/10.1145/2591796.2591811,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Geometrically Weighted Graphs,,APSP,,"In this case, the graph $G=(V,E)$ that we consider may be dense or sparse, may be directed or undirected, and has weights from a fixed set of $c$ values.",https://dl.acm.org/doi/10.1145/2591796.2591811,"$n$: number of vertices
$m$: number of edges
$c$: number of unique weights",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Dense Undirected Graphs with Positive Integer Weights,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is dense ($m = O(n^2)$), is undirected, and has positive integer weights.",https://dl.acm.org/doi/10.1145/2591796.2591811,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Sparse Directed Graphs with Arbitrary Weights,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is sparse ($m = O(n)$), is directed, and has arbitrary weights.",https://dl.acm.org/doi/10.1145/321992.321993,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Sparse Undirected Graphs with Positive Integer Weights,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is sparse ($m = O(n)$), is undirected, and has positive integer weights.",http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.22.7128&rep=rep1&type=pdf,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Sparse Undirected Graphs with Arbitrary Weights,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is sparse ($m = O(n)$), is undirected, and has arbitrary weights.",http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.22.7128&rep=rep1&type=pdf,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Dense Directed Unweighted Graphs,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is dense ($m = O(n^2)$), is directed, and is unweighted (or equivalently, has all unit weights).",https://dl.acm.org/doi/abs/10.1145/567112.567114,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Dense Undirected Unweighted Graphs,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is dense ($m = O(n^2)$), is undirected, and is unweighted (or equivalently, has all unit weights).",https://www.sciencedirect.com/science/article/pii/S0022000085710781?via%3Dihub,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Sparse Directed Unweighted Graphs,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is sparse ($m = O(n)$), is directed, and is unweighted (or equivalently, has all unit weights).",https://dl.acm.org/doi/abs/10.1145/567112.567114,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),APSP on Sparse Undirected Unweighted Graphs,,APSP,,"In this case, the graph $G=(V,E)$ that we consider is sparse ($m = O(n)$), is undirected, and is unweighted (or equivalently, has all unit weights).",https://www.sciencedirect.com/science/article/pii/S0022000085710781?via%3Dihub,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
17,All-Pairs Shortest Paths (APSP),(5/3)-approximate ap-shortest paths,,APSP,,Approximate APSP within a factor of 5/3.,https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
18,Integer Factoring,Integer Factoring,First Category Integer Factoring,,,"Given an $n$-bit integer $N$, find a non-trivial factorization $N=pq$ (where $p, q>1$ are integers) or return that $N$ is prime. For ""first category"" algorithms, the running time depends on the size of smallest prime factor.",https://link.springer.com/content/pdf/10.1007/BF01933667.pdf,"$n$: number of bits in the integer
$B$: bound parameter (if needed)",n,n,O(n),O(exp((1+o(1))(32n/9)^(1/3)(log n)^(2/3)) heuristically?,Special Number Field Sieve,,,Numerical Analysis,,,,
19,Integer Factoring,Smallest Factor,Second Category Integer Factoring,,,"Given an $n$-bit integer $N$, find a non-trivial factorization $N=pq$ (where $p, q>1$ are integers) or return that $N$ is prime. For ""second category"" algorithms, the running time depends solely on the size of the integer to be factored",https://www.ams.org/journals/mcom/1981-36-153/S0025-5718-1981-0595059-1/home.html,$n$: number of bits in the integer,n,n,O(n),O(exp((1+o(1))(64n/9)^(1/3)(log n)^(2/3)) heuristically?,General Number Field Sieve,,,Numerical Analysis,https://core.ac.uk/download/pdf/301669364.pdf,<= possibly good survey?,,
20,LU Decomposition,Rectangular Matrix LU Decomposition,,,Square Matrix LU Decomposition; ,"Lower–upper (LU) decomposition or factorization factors a matrix as the product of a lower triangular matrix and an upper triangular matrix. In the general case, the input is an $m \times n$ matrix.",https://arxiv.org/abs/math/0506382,"$m$: number of rows in input matrix
$n$: number of columns in input matrix
$l$: number of columns chosen to use in the decomposition ($l \geq k$)
$k$: desired rank of decomposition",mn,mn,O(mn),,,,,Numerical Analysis,,,,
20,LU Decomposition,Square Matrix LU Decomposition,,Rectangular Matrix LU Decomposition,,"Lower–upper (LU) decomposition or factorization factors a matrix as the product of a lower triangular matrix and an upper triangular matrix. In this specific case, the input is a square $n \times n$ matrix",https://arxiv.org/abs/math/0506382,$n$: dimension of square matrix,n^2,n^2,O(n^2),,,,,Numerical Analysis,,,,
21,Informed Search,Informed Search,,,,Informed search tries to reduce the amount of search that must be done by making intelligent choices for the nodes that are selected for expansion.,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4082128,"$b$: branching factor (the average number of successors per state)
$d$: the depth of the solution (the shortest path)
$n$: total number of nodes",d,O(n),O(d),O(b^d),D* Lite,O(d),Trivial (there could be a stronger one from APSP?),Robotics,,,,
22,String Search,Single String Search,,,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,http://www.cs.jhu.edu/~misha/ReadingSeminar/Papers/Knuth77.pdf,"$m$: pattern length
$n$: length of searchable text
$s$: size of the alphabet",m+n,n+m+s,O(1),,,,,Combinatorics,,,,
22,String Search,Multiple String Search,,,,Multiple string search algorithms try to find a place where one or several strings (also called patterns) are found within a larger string or text.,http://www.cs.jhu.edu/~misha/ReadingSeminar/Papers/Knuth77.pdf,"$m$: longest pattern length
$n$: length of searchable text
$s$: size of the alphabet
$k$: number of patterns to search for
$z$: number of matches",m+n,n+O(km)+s,O(1),$O(n + m + z)$,https://cr.yp.to/bib/1975/aho.pdf,,,Combinatorics,,,,
23,Sequence Alignment,"Edit Distance, constant-size alphabet",,,"Edit Sequence, constant-size alphabet; ","Given two strings, determine the minimum number of edits required to transform one of the strings into the other. Assume we have a constant-size alphabet.",https://doi.org/10.1016/0022-0000(80)90002-1,"$m,n$: lengths of input strings; assume $m\leq n$",m+n,m+n,O(1),O(mn/log^2(n)),https://www.sciencedirect.com/science/article/pii/0022000080900021?via%3Dihub,Omega((mn)^(1-eps)) for any eps>0,Reduction #4,Bioinformatics,,,,
23,Sequence Alignment,"Edit Sequence, constant-size alphabet",,"Edit Distance, constant-size alphabet",,"Given two strings, determine the shortest sequence of edits required to transform one of the strings into the other. Assume we have a constant-size alphabet.",https://doi.org/10.1016/0022-0000(80)90002-1,"$m,n$: lengths of input strings; assume $m\leq n$",m+n,m+n,O(n),O(mn/log^2(n)),https://www.sciencedirect.com/science/article/pii/0022000080900021?via%3Dihub,Omega((mn)^(1-eps)) for any eps>0,Reduction #4,Bioinformatics,,,,
24,Joins,Joins,,,,An SQL join clause - corresponding to a join operation in relational algebra - combines columns from one or more tables in a relational database.,https://www.w3schools.com/sql/sql_join.asp,"$m,n$: sizes of input tables",m+n,,,,,,,Databases,,,,
25,Line Clipping,Rectangular Window,,Convex Polygonal Window,,"Line clipping is the process of removing lines or portions of lines outside an area of interest. Typically; any line or part thereof which is outside of the viewing area is removed. Here, the viewing area is rectangular.",https://dl.acm.org/doi/pdf/10.1145/357332.357333,$n$: number of lines,n,O(n),O(n),O(n),"Many, e.g. https://dl.acm.org/doi/10.1145/357332.357333",Omega(n),Easily derived,Image Processing,,,,
25,Line Clipping,Convex Polygonal Window,,Convex Polyhedral Window,Rectangular Window; ,"Line clipping is the process of removing lines or portions of lines outside an area of interest. Typically; any line or part thereof which is outside of the viewing area is removed. Here, the viewing area is a convex polygon.",https://www.sciencedirect.com/science/article/pii/0097849378900213,"$n$: number of lines
$p$: number of edges on polygon",n,O(n+p),O(n),O(n*log(p)),https://www.sciencedirect.com/science/article/pii/0097849394900647/pdf?md5=06bd1f11031af17d1fd34626c4e2f49b&pid=1-s2.0-0097849394900647-main.pdf,Omega(n+p)?,Easily derived,Image Processing,,,,
25,Line Clipping,Convex Polyhedral Window,,,Convex Polygonal Window; ,"Line clipping is the process of removing lines or portions of lines outside an area of interest. Typically; any line or part thereof which is outside of the viewing area is removed. Here, the viewing area is a convex polyhedron.",https://www.sciencedirect.com/science/article/pii/0097849378900213,"$n$: number of lines
$p$: number of faces on polyhedron",n,O(n+p),O(n),O(np),https://onlinelibrary.wiley.com/doi/abs/10.1111/1467-8659.1510061,Omega(n+p)?,Easily derived,Image Processing,,,,
26,NFA to DFA conversion,NFA to DFA conversion,,,,Convert a given nondeterministic finite automota (NFA) to a deterministic finite automota (DFA).,https://ieeexplore.ieee.org/document/5392601,$n$: number of states in the given NFA,n,,,,,,,Combinatorics,,,,
27,Multiplication,Multiplication,,,,"Multiplication is one of the four elementary mathematical operations of arithmetic; with the others being addition; subtraction and division. Given two $n$-bit integers, compute their product, which should be a $2n$-bit integer.",https://mathworld.wolfram.com/Multiplication.html,"$n$: length of one of the integers, in bits",n,2n,O(n),O(n*logn),https://hal.archives-ouvertes.fr/hal-02070778,Omega(n),Easily derived,Numerical Analysis,,,,
28,Maximum Cardinality Matching,Bipartite Graph MCM,,General Graph MCM,Planar Bipartite Graph Perfect Matching; ,"The goal of maximum cardinality matching is to find a matching with as many edges as possible (equivalently: a matching that covers as many vertices as possible). Here, the graph is bipartite.",https://epubs.siam.org/doi/epdf/10.1137/0202019,"$V$: number of vertices
$E$: number of edges",V,O(V+E),O(V),,,,,Combinatorics,,,,
28,Maximum Cardinality Matching,General Graph MCM,,,Bipartite Graph MCM; ,"The goal of maximum cardinality matching is to find a matching with as many edges as possible (equivalently: a matching that covers as many vertices as possible). Here, the graph can be any general graph.",https://web.eecs.umich.edu/~pettie/matching/Blum-matching-ICALP90.pdf,"$V$: number of vertices
$E$: number of edges",V,O(V+E),O(V),,,,,Combinatorics,,,,
28,Maximum Cardinality Matching,Planar Bipartite Graph Perfect Matching,,Bipartite Graph MCM,,"The goal of maximum cardinality matching is to find a matching with as many edges as possible (equivalently: a matching that covers as many vertices as possible). Here, the graph is a planar bipartite graph.",http://theory.stanford.edu/~virgi/cs267/papers/planar-sssp.pdf,"$V$: number of vertices
$E$: number of edges",V,O(V+E),O(V),,,,,,,,,
29,Key Exchange,Key Exchange,,,,"Key exchange (also key establishment) is a method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm.",https://caislab.kaist.ac.kr/lecture/2010/spring/cs548/basic/B08.pdf,"$n$: maximum size of numbers (prime, parameters, keys), in bits",n,O(n),(none),,,,,Cryptography,,,,
30,Mutual Exclusion,Mutual Exclusion,,,,Mutual exclusion is a property of concurrency control; which is instituted for the purpose of preventing race conditions.,https://dl.acm.org/doi/abs/10.5555/6649,$n$: number of processors,n,,,,,,,Operating Systems,,,,
31,SDD Systems Solvers,Exact Laplacian Solver,Symmetric Diagonally Dominant System Solvers,,,"This problem refers to solving equations of the form $Lx = b$ where $L$ is a Laplacian of a graph. In other words, this is solving equations of the form $Ax = b$ for a SDD matrix $A$.

This variation of the problem requires an exact solution with no error.",https://theory.epfl.ch/vishnoi/Lxb-Web.pdf,$n$: dimension of matrix,n^2,O(n^2),O(n),,,,,Numerical Analysis,,,,
31,SDD Systems Solvers,Inexact Laplacian Solver,,,,"This problem refers to solving equations of the form $Lx = b$ where $L$ is a Laplacian of a graph. In other words, this is solving equations of the form $Ax = b$ for a SDD matrix $A$.

This variation of the problem permits some error.",https://theory.epfl.ch/vishnoi/Lxb-Web.pdf,$n$: dimension of matrix,n^2,O(n^2),O(n),,,,,,,,,
32,Cycle Detection,Cycle Detection,Cycle Finding; Loop Detection,,,Cycle detection or cycle finding is the algorithmic problem of finding a cycle in a sequence of iterated function values.,http://bvicam.in/INDIACom/BJIT/downloads/BIJIT%20-%20Complete%20Issue%2012.pdf#page=25,"$t_f$: time to perform one evaluation of $f$
$\mu$: the starting index of the cycle
$\lambda$: the period of the cycle
$M$: number of values stored",\mu,,,$t_f (\mu + \lambda)(1+\Theta(1/sqrt(M)))$,Algorithm #324,(\mu + \lambda)(1 + 1/(M-1)),https://www.sciencedirect.com/science/article/pii/0304397585900441?via%3Dihub,Combinatorics,,,,
33,Generating Random Permutations,General Permutations,,,,"Given an input string/array, generate a single random permutation of the characters/elements of the string/array. ",https://dl.acm.org/doi/10.1145/364520.364540,$n$: number of elements,n,O(n),O(n),O(n),Durstenfeld's Algorithm 235,Omega(n),Easily derived,Numerical Analysis,,,,
33,Generating Random Permutations,Cyclic Permutations,,,,"Given an input string/array, generate a single random cyclic permutation of the characters/elements of the string/array. ",https://www.sciencedirect.com/science/article/pii/0020019086900736,$n$: number of elements,n,O(n),O(n),O(n),Sattolo's algorithm,Omega(n),Easily derived,Numerical Analysis,,,,
34,Convex Optimization (Non-linear),Convex Optimization (Non-linear),,,,Convex optimization is a subfield of mathematical optimization that studies the problem of minimizing convex functions over convex sets.,https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf,"$n$: number of variables
$m$: number of constraints
$L$: length of input, in bits",n,,,,,,,Numerical Analysis,,,,
35,Gröbner Bases,Gröbner Bases,,,,"In mathematics, and more specifically in computer algebra, computational algebraic geometry, and computational commutative algebra, a Gröbner basis is a particular kind of generating set of an ideal in a polynomial ring $K[x_1, \ldots ,x_n]$ over a field $K$. As an algorithmic problem, given a set of polynomials in $K[x_1, \ldots,x_n]$, determine a Gröbner basis.",https://dl.acm.org/doi/10.1145/1088216.1088219,"$n$: number of variables in each polynomial
$d$: maximal total degree of the polynomials",n,(potentially massive),(potentially massive),,,,,Numerical Analysis,,,,
36,Minimum value in each row of an implicitly-defined totally monotone matrix,Minimum value in each row of an implicitly-defined totally monotone matrix,,,,"Given a totally monotone matrix $A$ whose entries $A[i, j]$ are implicitly defined by some function $f(i, j)$ (assume $f$ takes constant time to evaluate for all relevant $(i, j)$), determine the minimum value in each row.",https://link.springer.com/article/10.1007/BF01840359,"$m,n$: dimensions of matrix; assume $m≥n$
possibly uses a function $f$ to define entries; assume evaluation of $f$ takes time $O(1)$",mn,O(mn),O(n),O(n(1+log(n/m))),SMAWK algorithm,Omega(n),Easily derived,Combinatorics,,,,
37,All Permutations,All Permutations,,,,Generate all permuttaions of the characters/elements in a string/array.,https://doi.org/10.1090/S0025-5718-1963-0159764-2,$n$: number of elements,n,O(n),"O(n) per permutation, or O(1) if in-situ",O(1) per permutation,"Heap's algorithm, among others",Omega(1) per permutation,Easily derived,Numerical Analysis,https://dl.acm.org/doi/10.1145/356689.356692,<= big survey,https://en.wikipedia.org/wiki/Permutation#Generation_with_minimal_changes,<= also more here
38,Optimal Binary Search Trees,Optimal Binary Search Tree Problem,OBST,,Approximate OBST; Huffman Encoding; Alphabetic Tree Problem; ,Suppose we are given $n$ keys and the probabilities of accessing each key and those occurring in the gap between two successive keys. The optimal binary search tree problem is to construct a binary search tree on these $n$ keys that minimizes the expected access time.,https://doi.org/10.1016/S0304-3975(96)00320-9,$n$: number of elements,n,,,,,,,Combinatorics,,,,
38,Optimal Binary Search Trees,Approximate OBST,,Optimal Binary Search Tree Problem,,"Suppose we are given $n$ keys and the probabilities of accessing each key and those occurring in the gap between two successive keys. The approximate optimal binary search tree problem is to construct a binary search tree on these $n$ keys, whose expected access time is within an approximation factor of the optimal time.",https://doi.org/10.1016/S0304-3975(96)00320-9,$n$: number of elements,n,,,,,,,Combinatorics,,,,
38,Optimal Binary Search Trees,Huffman Encoding,Huffman Tree Problem,Optimal Binary Search Tree Problem,,A related problem to the OBST problem is when there is no order between the keys and there are probabilities associated only with the gaps and the objective is to build a binary tree with minimum expected weighted path length from the root. This is called the Huffman Tree Problem,https://doi.org/10.1016/S0304-3975(96)00320-9,$n$: number of elements,n,,,,,,,Combinatorics,,,,
38,Optimal Binary Search Trees,Alphabetic Tree Problem,,Optimal Binary Search Tree Problem,,"A variant of the OBST problem is when only the gaps have nonzero access probabilities, and is called the optimal alphabetic tree problem.",https://doi.org/10.1016/S0304-3975(96)00320-9,$n$: number of elements,n,,,,,,,Combinatorics,,,,
39,Nash Equilibria,2-Player,,n-player,,"In game theory, the Nash equilibrium, named after the mathematician John Forbes Nash Jr., is a proposed solution of a non-cooperative game involving two or more players in which each player is assumed to know the equilibrium strategies of the other players, and no player has anything to gain by changing only his own strategy. As an algorithmic problem, given the payoff matrices for a bimatrix game, determine a Nash equilibrium.",https://dl.acm.org/doi/pdf/10.1145/779928.779933,"$m,n$: dimensions of payoff matrices",mn,O(mn),O(m+n),,,,,Robotics,https://www.sciencedirect.com/science/article/pii/S0899825606000935?via%3Dihub,<= look into this?,,
39,Nash Equilibria,n-Player,,,2-Player; ,"Here, given the payoff matrices for an $n$-player game, determine a Nash equilibrium.",https://dl.acm.org/doi/pdf/10.1145/779928.779933,$n$: number of players,n,,,,,,,Robotics,,,,
40,Maximum-Weight Matching,Maximum-Weight Matching,,,Bipartite Maximum-Weight Matching; ,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized. Here, the graph is unrestricted; i.e. can be any general graph.",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1366244,"$n$: number of vertices
$m$: number of edges
$N$: largest weight magnitude",n,O(mlogN),O(n),,,,,Combinatorics,,,,
40,Maximum-Weight Matching,Bipartite Maximum-Weight Matching,,Maximum-Weight Matching,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized. Here, the graph must be bipartite.",https://ieeexplore.ieee.org/abstract/document/6979028?casa_token=daaoBjrHUa4AAAAA:DCjk_WMWZ5Is6KvGpmS8a2bL9LskvV0P1zEG4U2u-Tm_C8sixu1w65OpTyjml1HEpaikXhtYsg,"$n$: number of vertices
$m$: number of edges
$N$: largest weight magnitude",n,O(mlogN),O(n),,,,,Combinatorics,https://web.eecs.umich.edu/~pettie/papers/ApproxMWM-JACM.pdf,<= has big tables of algorithm runtimes,,
41,Constructing Eulerian Trails in a Graph,Constructing Eulerian Trails in a Graph,,,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",https://drops.dagstuhl.de/opus/volltexte/2016/6474/pdf/LIPIcs-MFCS-2016-62.pdf,"$V$: number of vertices
$E$: number of edges",V,,,,,,,Combinatorics,,,,
42,Discrete Fourier Transform,Discrete Fourier Transform,,,,"In mathematics, the discrete Fourier transform (DFT) converts a finite sequence of equally-spaced samples of a function into a same-length sequence of equally-spaced samples of the discrete-time Fourier transform (DTFT), which is a complex-valued function of frequency.",https://www.ams.org/journals/mcom/1978-32-141/S0025-5718-1978-0468306-4/S0025-5718-1978-0468306-4.pdf,$n$: length of the input data set,n,$O(n)$,$O(n)$,,,,,Signal Processing,,,,
43,Line Drawing,Line Drawing,,,,"Given a line segment with endpoints $(x_0, y_0), (x_1, y_1)$ and a discrete graphical medium (like pixel-based displays and printers), draw/approximate the line segment on the medium, potentially with antialiasing.",http://www.cs.gettysburg.edu/~ilinkin/courses/Fall-2014/cs373/handouts/papers/gs-fegsd-81.pdf,$n$: number of pixels the line goes through,n,O(1),O(n),O(n),"(many algorithms, such as this one)",Omega(n),Easily derived,Image Processing,,,,
44,Polygon Clipping,Polygon Clipping with Arbitrary Clipping Polygon,,,Polygon Clipping with Convex Clipping Polygon; ,"Clipping is an essential part of image synthesis. Traditionally, polygon clipping has been used to clip out the portions of a polygon that lie outside the window of the output device to prevent undesirable effects. In the recent past polygon clipping is used to render 3D images through hidden surface removal and to produce high-quality surface details using techniques such as Beam tracing. Polygon clipping is also used in distributing the objects of a scene to appropriate processors in multiprocessor raytracing systems to improve rendering speeds.",https://davis.wpi.edu/~matt/courses/clipping/,,n,,,,,,,Image Processing,,,,
44,Polygon Clipping,Polygon Clipping with Convex Clipping Polygon,,Polygon Clipping with Arbitrary Clipping Polygon,,"Here, the clipping polygon is restricted to being convex.",,,n,,,,,,,,,,,
45,Shown Surface Determination,"(3-Dimensional, i.e. project onto a 2D plane)",,,,"This is the process of identifying what surfaces and parts of surfaces can be seen from a particular viewing angle. Given a set of obstacles in the Euclidean space, two points in the space are said to be visible to each other, if the line segment that joins them does not intersect any obstacles.",https://www.cs.drexel.edu/~david/Classes/Papers/p443-newell.pdf,"$n$: number of polygons
$p$: number of pixels in viewport",n,,,,,Omega(n+p),Easily derived,Image Processing,,,,
46,Line Simplification,Line Simplification,,,,Line simplification is the process of taking a line/curve as represented by a list of points and reducing the number of points needed to accurately represent the given line.,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.494.7321,$n$: number of points representing the curve/line initially,n,,,,,,,Image Processing,,,,
47,Eigenvalues (Iterative Methods),All Eigenvalues,,Any Eigenvalue,,"Given an $n \times n$ matrix $A$, find all eigenvalues of $A$.","https://mathworld.wolfram.com/Eigenvalue.html#:~:text=Eigenvalues%20are%20a%20special%20set,Marcus%20and%20Minc%201988,%20p.",$n$: dimension of matrix,n^2,O(n^2),O(n),,,,,Numerical Analysis,,,,
47,Eigenvalues (Iterative Methods),Any Eigenvalue,,Any Eigenpair,All Eigenvalues; ,"Given an $n \times n$ matrix $A$, find any eigenvalue of $A$.","https://mathworld.wolfram.com/Eigenvalue.html#:~:text=Eigenvalues%20are%20a%20special%20set,Marcus%20and%20Minc%201988,%20p.",$n$: dimension of matrix,n^2,O(n^2),O(n),,,,,Numerical Analysis,,,,
47,Eigenvalues (Iterative Methods),All Eigenpairs,,Any Eigenpair,,"Given an $n \times n$ matrix $A$, find all eigenpairs (eigenvalues and associated eigenvectors) of $A$.","https://mathworld.wolfram.com/Eigenvalue.html#:~:text=Eigenvalues%20are%20a%20special%20set,Marcus%20and%20Minc%201988,%20p.",$n$: dimension of matrix,n^2,O(n^2),O(n^2),,,,,Numerical Analysis,,,,
47,Eigenvalues (Iterative Methods),Any Eigenpair,,,Any Eigenvalue; All Eigenpairs; Eigenpair with the Largest Eigenvalue; Eigenpair closest to mu; ,"Given an $n \times n$ matrix $A$, find any eigenpair (eigenvalue and associated eigenvector) of $A$.","https://mathworld.wolfram.com/Eigenvalue.html#:~:text=Eigenvalues%20are%20a%20special%20set,Marcus%20and%20Minc%201988,%20p.",$n$: dimension of matrix,n^2,O(n^2),O(n),,,,,Numerical Analysis,,,,
47,Eigenvalues (Iterative Methods),Eigenpair with the Largest Eigenvalue,,Any Eigenpair,,"Given an $n \times n$ matrix $A$, find the eigenpair (eigenvalue and associated eigenvector) of $A$ with the largest eigenvalue.","https://mathworld.wolfram.com/Eigenvalue.html#:~:text=Eigenvalues%20are%20a%20special%20set,Marcus%20and%20Minc%201988,%20p.",$n$: dimension of matrix,n^2,O(n^2),O(n),,,,,Numerical Analysis,,,,
47,Eigenvalues (Iterative Methods),Eigenpair closest to mu,,Any Eigenpair,,"Given an $n \times n$ matrix $A$, find the eigenpair (eigenvalue and associated eigenvector) of $A$ with the eigenvalue closest to $\mu$.","https://mathworld.wolfram.com/Eigenvalue.html#:~:text=Eigenvalues%20are%20a%20special%20set,Marcus%20and%20Minc%201988,%20p.",$n$: dimension of matrix,n^2,O(n^2),O(n),,,,,Numerical Analysis,,,,
48,Root Computation,General Root Computation,,,,"Given a real continuous function, compute one of the roots.",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1084580,"$\epsilon$: (additive) tolerance error
$a, b$: endpoint values, with $b>a$
$n_{max}$: maximum number of iterations",n_max,,,,,,,Numerical Analysis,,,,
48,Root Computation,Root Computation with continuous first derivative,,,,"Given a real function with continuous first derivative, compute one of the roots.",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1084580,"$\epsilon$: (additive) tolerance error
$a, b$: endpoint values, with $b>a$
$n_{max}$: maximum number of iterations",n_max,,,,,,,Numerical Analysis,,,,
49,Nearest Neighbor Search,k Nearest Neighbors Search,k-NNS,,k Approximate Nearest Neighbors Search; ,"Within a dataset of $n$ points, find the $k$ closest points to a specified point.",https://dl.acm.org/doi/pdf/10.1145/355744.355745,"$n$: number of points in dataset
$k$: number of neighbors to find",n,O(n),O(k),,,,,Combinatorics,,,,
49,Nearest Neighbor Search,k Approximate Nearest Neighbors Search,k-ANNS,k Nearest Neighbors Search,k-ANNS for a dense 3D map of geometric points; ,"Within a dataset of $n$ points, find approximately the $k$ closest points to a specified point.",https://ieeexplore.ieee.org/document/8594636,"$n$: number of points in dataset
$k$: number of neighbors to find",n,O(n),O(k),,,,,Combinatorics,,,,
49,Nearest Neighbor Search,k-ANNS for a dense 3D map of geometric points,,k Approximate Nearest Neighbors Search,,"Within a dataset of $n$ points in a dense 3D geometric map, find approximately the $k$ closest points to a specified point.",https://ieeexplore.ieee.org/document/8594636,"$n$: number of points in dataset
$k$: number of neighbors to find",n,O(n),O(k),,,,,Combinatorics,,,,
50,Coset Enumeration,Coset Enumeration,,,,"Coset enumeration programs implement systematic procedures for enumerating the cosets of a subgroup H of finite index in a group G, given a set of defining relations for G and words generating H.",https://arxiv.org/pdf/math/9406202.pdf,"$n$: number of generators
$g$: order of group (possibly exponential in $n$)
$k$: number of relations
$c$: maximum number of generators multiplied together in a relation",n,,,,,,,Numerical Analysis,,,,
51,Maximum Likelihood Parameters,Maximum Likelihood Parameters,,,,"In these algorithms, the goal is to estimate hyperparameters using maximum likelihood.",https://www.jstor.org/stable/2984875,"$n$: number of observations in sample
$r$: number of parameters + latent variables",n,O(n),O(r),,,,,Numerical Analysis,,,,
52,Cardinality Estimation,Cardinality Estimation,,,,"Given a multiset of (possibly hashed) values, estimate the number of distinct elements of the multiset. Of interest is minimizing storage usage.",http://algo.inria.fr/flajolet/Publications/FlFuGaMe07.pdf,"$N$: number of values in multiset
$n$: cardinality of multiset (not known)",N,O(N),O(1),,,,,Numerical Analysis,https://oertl.github.io/hyperloglog-sketch-estimation-paper/paper/paper.pdf,https://www.vldb.org/pvldb/vol11/p499-harmouch.pdf,<= see these for more algos?,
53,Register Allocation,Local Register Allocation,,,,"Register allocation is the process of mapping the unlimited number of symbolic registers assumed in the intermediate language into the limited real machine registers.

Local register allocation deals with the allocation of registers in straight-line code segments (http://www.cs.ucr.edu/~gupta/research/Publications/Comp/p370-gupta.pdf).",https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.452.8606&rep=rep1&type=pdf,$n$: number of live ranges (the number of candidates to reside in registers),n,O(n),O(n),O(n),http://web.cs.ucla.edu/~palsberg/course/cs132/linearscan.pdf,,,Operating Systems,,,,
53,Register Allocation,Global Register Allocation,,,,"Register allocation is the process of mapping the unlimited number of symbolic registers assumed in the intermediate language into the limited real machine registers.

Global register allocation deals with the allocation of registers in code containing branches (http://www.cs.ucr.edu/~gupta/research/Publications/Comp/p370-gupta.pdf).",https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.452.8606&rep=rep1&type=pdf,$n$: number of live ranges (the number of candidates to reside in registers),n,O(n),O(n),,,NP-Complete,http://www.cs.ucr.edu/~gupta/research/Publications/Comp/p370-gupta.pdf,Operating Systems,,,,
54,Voronoi Diagrams,Voronoi Diagrams,,,,"Given a set of $n$ points in 2-dimensional space, compute the Voronoi diagram with the $n$ points as seeds.",https://www.wias-berlin.de/people/si/course/files/Fortune87-SweepLine-Voronoi.pdf,$n$: number of points,n,O(n),O(n),O(n*log(n)),Fortune's algorithm,Omega(n*log(n)),Reduction from sorting,Combinatorics,,,,
55,Variance Calculations,Variance Calculations,,,,"Given a set of n (real/integer) numbers, compute the variance (sample or population). Of interest is streaming algorithms and numerical stability.",http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.302.7503&rep=rep1&type=pdf,$n$: number of values,n,O(n),O(1),O(n),(many algorithms),Omega(n),Easily derived,Numerical Analysis,,,,
56,Topological Sorting,Topological Sorting,,,,"Given a graph or network, find a topological sorting of the graph. A list in topological order has a special property. Simply expressed: proceeding from element to element along any path in the network, one passes through the list in one direction only. Stated another way, a list in topological order is such that no element appears in it until after all elements appearing on all paths leading to the particular element have been listed. ",https://dl.acm.org/doi/10.1145/368996.369025,"$V$: number of vertices
$E$: number of edges",V,O(V+E),O(V),,,,,Combinatorics,,,,
57,DFA Minimization,DFA Minimization,,,Acyclic DFA Minimization; Cyclic Nontrivial SCCs DFA Minimization; ,"Given a finite deterministic automaton (DFA) from a class $C$ of DFAs, determine its minimal automaton given by the equivalence relation on states.",https://www.labri.fr/perso/zeitoun/research/pdf/Almeida-Zeitoun-IPL2008.pdf,"$n$: number of states
$d$: number of transitions
$k$: size of alphabet",n,O(n + d),,,,,,Combinatorics,,,,
57,DFA Minimization,Acyclic DFA Minimization,,DFA Minimization,,"Given an acyclic finite deterministic automaton (DFA) from a class $C$ of DFAs, determine its minimal automaton given by the equivalence relation on states.",https://www.labri.fr/perso/zeitoun/research/pdf/Almeida-Zeitoun-IPL2008.pdf,"$n$: number of states
$d$: number of transitions
$k$: size of alphabet",n,O(n + d),,,,,,Combinatorics,,,,
57,DFA Minimization,Cyclic Nontrivial SCCs DFA Minimization,,DFA Minimization,,"Given an finite deterministic automaton (DFA) from a class $C$ of DFAs, whose nontrivial SCCs are cyclic, determine its minimal automaton given by the equivalence relation on states.",https://www.labri.fr/perso/zeitoun/research/pdf/Almeida-Zeitoun-IPL2008.pdf,"$n$: number of states
$d$: number of transitions
$k$: size of alphabet",n,O(n + d),,,,,,Combinatorics,,,,
58,Lowest Common Ancestor,Lowest Common Ancestor,Nearest Common Ancestor,,Off-Line Lowest Common Ancestor; Lowest Common Ancestor with Static Trees; Lowest Common Ancestor with Linking Roots; Lowest Common Ancestor with Linking; Lowest Common Ancestors with Linking and Cutting; ,"Given a collection of rooted trees, answer queries of the form, ""What is the nearest
common ancestor of vertices $x$ and $y$?""",https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174,"$n$: number of vertices
$m$: number of total number of operations (queries, links, and cuts)",n,O(m+n),O(m),,,,,Combinatorics,,,,
58,Lowest Common Ancestor,Off-Line Lowest Common Ancestor,,Lowest Common Ancestor,,"Given a collection of rooted trees, answer queries of the form, ""What is the nearest
common ancestor of vertices $x$ and $y$?"" In this version of the problem, the collection of trees is static and the entire sequence of queries is specified in advance.",https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174,"$n$: number of vertices
$m$: number of total number of operations (queries, links, and cuts)",n,O(m+n),O(m),,,,,Combinatorics,,,,
58,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,,Lowest Common Ancestor,,"Given a collection of rooted trees, answer queries of the form, ""What is the nearest
common ancestor of vertices $x$ and $y$?"" In this version of the problem, the collection of trees is static but the queries are given on-line. That is, each query must be answered before the next one is known.",https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174,"$n$: number of vertices
$m$: number of total number of operations (queries, links, and cuts)",n,O(m+n),O(m),,,,,Combinatorics,,,,
58,Lowest Common Ancestor,Lowest Common Ancestor with Linking Roots,,Lowest Common Ancestor,,"Given a collection of rooted trees, answer queries of the form, ""What is the nearest
common ancestor of vertices $x$ and $y$?"" In this version of the problem, The queries are given on-line. Interspersed with the queries are on-line commands of the form $link(x, y)$ where $x$ and $y$ are tree roots. The effect of a command $link(x, y)$ is to combine the trees containing $x$ and $y$ by making $x$ the parent of $y$.",https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174,"$n$: number of vertices
$m$: number of total number of operations (queries, links, and cuts)",n,O(m+n),O(m),,,,,Combinatorics,,,,
58,Lowest Common Ancestor,Lowest Common Ancestor with Linking,,Lowest Common Ancestor,,"Given a collection of rooted trees, answer queries of the form, ""What is the nearest
common ancestor of vertices $x$ and $y$?"" In this version of the problem, the queries are on-line. Interspersed with the queries are on-line commands $link(x, y)$ such that $y$, but not necessarily $x$, is a tree root. The effect of a command $link(x, y)$ is to combine the trees containing $x$ and $y$ by making $x$ the parent of $y$.",https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174,"$n$: number of vertices
$m$: number of total number of operations (queries, links, and cuts)",n,O(m+n),O(m),,,,,Combinatorics,,,,
58,Lowest Common Ancestor,Lowest Common Ancestors with Linking and Cutting,,Lowest Common Ancestor,,"Given a collection of rooted trees, answer queries of the form, ""What is the nearest
common ancestor of vertices $x$ and $y$?"" In this version of the problem, the queries are on-line. Interspersed with the queries are on-line commands of two types: $link(x, y)$, where $y$ but not necessarily $x$ is a tree root, and $cut (x)$, where $x$ is not a root. The effect of a command $link(x, y)$ is to combine the trees containing $x$ and $y$ by making $x$ the parent of $y$. The effect of a command $cut (x)$ is to cut the edge connecting $x$ and its parent, splitting the tree containing $x$ into two trees: one containing all descendants of $x$ and another containing all nondescendants of $x$.",https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174,"$n$: number of vertices
$m$: number of total number of operations (queries, links, and cuts)",n,O(m+n),O(m),,,,,Combinatorics,,,,
59,Graph Edit Distance Computation,Exact GED,GED Computation,,,"The GED of two graphs is defined as the minimum cost of an edit path between them, where an edit path is a sequence of edit operations (inserting, deleting, and relabeling vertices or edges) that transforms one graph into another. Exact GED computes the GED exactly.",https://www.sciencedirect.com/science/article/am/pii/S095070511830488X,$V$: number of vertices in the larger of the two graphs,V,O(V),O(1),,,exp(V),NP-Hard,Combinatorics,,,,
59,Graph Edit Distance Computation,Inexact GED,,,,"The GED of two graphs is defined as the minimum cost of an edit path between them, where an edit path is a sequence of edit operations (inserting, deleting, and relabeling vertices or edges) that transforms one graph into another. Inexact GED computes an answer that is not gauranteed to be the exact GED.",https://www.sciencedirect.com/science/article/am/pii/S095070511830488X,$V$: number of vertices in the larger of the two graphs,V,O(V),O(1),,,,,Combinatorics,,,,
60,Clique Problems,"Enumerating Maximal Cliques, arbitrary graph",,,,A maximal clique (complete subgraph) is a clique that is not contained in any other clique. The goal here is to enumerate such maximal cliques in a given graph.,https://dl.acm.org/doi/10.1145/362342.362367,"$n$: number of vertices
$m$: number of edges",n,O(m+n),O(3^(n/3)),,,,,Combinatorics,,,,
,Clique Problems,k-Clique,,,Exact k-Clique; Min-Weight k-Clique; Max-Weight k-Clique; ,"For a constant $k \geq 3$, the $k$-Clique problem is as follows: given a graph $G = (V, E)$ on $n$ vertices, does $G$ contain $k$ distinct vertices $a_1, \ldots, a_k$ so that for every $(i, j)$, $i \neq j$, $(a_i, a_j ) \in E$? Such a $k$ node graph is called a $k$-clique.",https://people.csail.mit.edu/virgi/eccentri.pdf,"$n$: number of vertices
$m$: number of edges
$k$: size of clique",n,O(m+n),O(1),O(n^(k-(3-omega)*floor(k/3)) where omega is the exponent on matrix multiplication,https://dml.cz/bitstream/handle/10338.dmlcz/106381/CommentatMathUnivCarol_026-1985-2_22.pdf,$\Omega(n^{\omega k / 3 - \epsilon})$ for all $\epsilon > 0$,k-Clique Hypothesis,Combinatorics,,,,
,Clique Problems,Exact k-Clique,,k-Clique,,"Given a graph $G = (V, E)$, find a $k$-clique of weight 0.",https://people.csail.mit.edu/virgi/eccentri.pdf,"$n$: number of vertices
$m$: number of edges
$k$: size of clique",n,O(m+n),O(k),,,$\Omega(n^{k-o(1)})$,Exact k-Clique Hypothesis,Combinatorics,,,,
,Clique Problems,Min-Weight k-Clique,,k-Clique,,"Given a graph $G = (V, E)$, find the $k$-clique of minimum weight.",https://people.csail.mit.edu/virgi/eccentri.pdf,"$n$: number of vertices
$m$: number of edges
$k$: size of clique",n,O(m+n),O(k),,,$\Omega(n^{k-o(1)})$,Min-Weight k-Clique Hypothesis,Combinatorics,,,,
,Clique Problems,Max-Weight k-Clique,,k-Clique,,"Given a graph $G = (V, E)$, find the $k$-clique of maximum weight.",https://arxiv.org/pdf/1602.05837.pdf,"$n$: number of vertices
$m$: number of edges
$k$: size of clique",n,O(m+n),O(k),,,$\Omega(n^{k-o(1)})$,"Min-Weight k-Clique Hypothesis, negate weights",Combinatorics,,,,
61,The Traveling-Salesman Problem,Minimum TSP,TSP,,,"In Minimum TSP, you are given a set $C$ of cities and distances between each distinct pair of cities. The goal is to find an ordering or tour of the cities, such that you visit each city exactly once and return to the origin city, that minimizes the length of the tour. This is the typical variation of TSP.",https://dl.acm.org/doi/pdf/10.1145/876638.876640,"$V$: number of cities (nodes)
$E$: number of roads (edges)",V,O(V+E),O(V),O(V^2 2^V),Algo #484,\Omega(\poly(V)),Karp 1972,Combinatorics,,,,
61,The Traveling-Salesman Problem,Maximum TSP,,,,"In Maximum TSP, you are given a set $C$ of cities and distances between each distinct pair of cities. The goal is to find an ordering or tour of the cities, such that you visit each city exactly once and return to the origin city, that maximizes the length of the tour.",https://dl.acm.org/doi/pdf/10.1145/876638.876640,"$V$: number of cities (nodes)
$E$: number of roads (edges)",V,O(V+E),O(V),,,\Omega(\poly(V)),https://dl.acm.org/doi/pdf/10.1145/876638.876640,Combinatorics,,,,
61,The Traveling-Salesman Problem,Approximate TSP,,,,"Approximate TSP is the problem of finding an approximate answer to Minimum TSP.

In Minimum TSP, you are given a set $C$ of cities and distances between each distinct pair of cities. The goal is to find an ordering or tour of the cities, such that you visit each city exactly once and return to the origin city, that minimizes the length of the tour. This is the typical variation of TSP.",https://link.springer.com/chapter/10.1007/978-1-4020-9688-4_3,"$V$: number of cities (nodes)
$E$: number of roads (edges)",V,O(V+E),O(V),,,,,Combinatorics,,,,
62,Poisson Problem,2-Dimensional Poisson Problem,Two-dimensional elliptic partial differential equations,,,"Given $f$, solve for $u$ in the 2-dimensional Poisson equation:

$u_{xx} + u_{yy} = f(x,y)$",https://dl.acm.org/doi/abs/10.1145/1053379.1053381,$n$: dimension of grid (where grid is discretized),n,,,,,,,Numerical Analysis,Better version: https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1117&context=cstech,,,
63,Poisson Problem,3-Dimensional Poisson Problem,Three-dimensional elliptic partial differential equations,,,"Given $f$, solve for $u$ in the 3-dimensional Poisson equation:

$u_{xx} + u_{yy} + u_{zz} = f(x,y,z)$",https://dl.acm.org/doi/abs/10.1145/1053379.1053381,$n$: dimension of grid (where grid is discretized),n,,,,,,,Numerical Analysis,,,,
64,Delaunay Triangulation,Delaunay Triangulation,,,,"Given a set of points, the Delaunay Triangulation problem is to triangulate the points using the following notion of triangulation.

$AB$ is an edge of the Delaunay triangulation iff there is a circle passing through $A$ and $B$ so that all other points in the point set, $C$, where $C$ is not equal to $A$ or $B$, lie outside the circle. Equivalently, all triangles in the Delaunay triangulation for a set of points will have empty circumscribed circles. That is, no points lie in the interior of any triangle's circumcircle.",http://www.geom.uiuc.edu/~samuelp/del_project.html,$n$: number of points,n,,,,,,,Combinatorics,,,,
65,De Novo Genome Assembly,De Novo Genome Assembly,,,,"De novo sequencing refers to sequencing a novel genome where there is no reference sequence available for alignment. Sequence reads are assembled as contigs, and the coverage quality of de novo sequence data depends on the size and continuity of the contigs (ie, the number of gaps in the data).",https://www.illumina.com/techniques/sequencing/dna-sequencing/whole-genome-sequencing/de-novo-sequencing.html,"$n$: sum of lengths of reads
$f$: number of input sequences",n,,,,,,,Bioinformatics,,,,
66,The Subset-Sum Problem,Subset Sum,,,,"Given a set $S$ of integers and a target sum $t$, determine whether there is a subset of $S$ that sum to $t$.",https://dl.acm.org/doi/pdf/10.1145/3329863,"$S$: the set of integers
$n$: the number of integers in the set
$n'$: the number of distinct elements in the set
$t$: the target sum
$\sigma$: sum of elements in the set",n,O(n),O(1),"\tilde{O}(min{\sqrt{n'}t, t^{5/4}, σ})",Algo #544,\Omega(t^{1-\epsilon} 2^{o(n)}),Reduction #136,Combinatorics,,,,
67,Dependency Inference Problem,Functional Dependency Inference Problem,,,,"The functional dependency inference problem is to find a cover for the set of functional dependencies that hold in a given relation.

A functional dependency (abbr. FD), $f$, is a statement $f: X \rightarrow Y$ where $X$ and $Y$ are sets of attributes. If $R(X, Y, \ldots)$ is a relation on a set of attributes that contains $X$ and $Y$, then $R$ obeys the FD $f$ if every two tuples of $R$ which have the same projection on $X$ also have the same projection on $Y$. Given $f: X \rightarrow Y$, we say that $f$ is a functional dependency from $X$ to $Y$, that $Y$ is functionally dependent on $X$ or that $X$ functionally determines $Y$. From the definition it follows that for each pair of sets $X$ and $Y$ there is at most one functional dependency from $X$ to $Y$. Therefore, we usually omit the name of the FD and write $X \rightarrow Y$. ",https://dl.acm.org/doi/pdf/10.1145/509404.509414,"$n$: number of attributes
$p$: number of tuples/rows/data points",n,,,O(2^n),https://www.sciencedirect.com/science/article/pii/0166218X92900315,,,Databases,,,,
70,Dependency Inference Problem,Multivalued Dependency Inference Problem,,,,"The multivalued dependency inference problem is to find a cover for the set of multivalued dependencies that hold in a given relation.

A multivalued dependency (abbr. MVD), $g$, on a set of attributes $U$ is a statement $g: X \rightarrow \rightarrow Y$, where $X$ and $Y$ are subsets of $U$. Let $Z$ be the complement of the union of $X$ and $Y$ in $U$. A relation $R(U)$ obeys the MVD $g: X \rightarrow \rightarrow Y$ if for every $XZ$-value, $xz$, that appears in $R$, we have $Y_R(xz) = Y_R (x)$. In words, the MVD $g$ is valid in $R$ if the set of $Y$-values that appears in $R$ with a given $x$ appears with every combination of $x$ and $z$ in $R$. Thus, this set is a function of $x$ alone and does not depend on the $Z$-values that appear with $x$. Given $g: X \rightarrow \rightarrow Y$, we say that $g$ is a multivalued dependency from $X$ to $Y$ (in the set $U$). As we do for functional dependencies (FD's), here also we usually omit the name $g$ of the MVD and just write $X \rightarrow \rightarrow Y$.",https://dl.acm.org/doi/pdf/10.1145/509404.509414,"$n$: number of attributes
$p$: number of tuples/rows/data points",n,,,O(kn^2),https://doi.org/10.1016/0950-5849(92)90028-N,,,Databases,,,,
68,BCNF Decomposition,BCNF Decomposition,Boyce-Codd Normal Form Decomposition,,,"BCNF Decomposition is the problem of decomposing a relation schema into Boyce-Codd normal form (BCNF).

A relation schema $R$ is in Boyce Codd Normal Form (abbr. BCNF) if for all non-trivial FDs $X \rightarrow Y$ in $F^+$, $X$ is a superkey. In extending this notion to database schemas, we must be conscious of the UR-assumption. We say that $R_i = <ATTR_i,F_i>$ is in BCNF if the schema $<ATTR_i, F^+[ATTR_i]>$ is in BCNF, and $D$ is in BCNF if each $R_i$ is.",https://www.microsoft.com/en-us/research/uploads/prod/2020/12/WhatDoesBCNFdo-VLDB1980.pdf,"$n$: size of database?
$k$: number of functional dependencies",n,O(n),,O(2^n),,,,Databases,,,,
68,BCNF Decomposition,Decisional BCNF,Decisional Boyce-Codd Normal Form,,,"Decisional BCNF is the problem of deciding whether or not a relation schema can be turned into Boyce-Codd normal form (BCNF).

A relation schema $R$ is in Boyce Codd Normal Form (abbr. BCNF) if for all non-trivial FDs $X \rightarrow Y$ in $F^+$, $X$ is a superkey. In extending this notion to database schemas, we must be conscious of the UR-assumption. We say that $R_i = <ATTR_i,F_i>$ is in BCNF if the schema $<ATTR_i, F^+[ATTR_i]>$ is in BCNF, and $D$ is in BCNF if each $R_i$ is.",https://www.microsoft.com/en-us/research/uploads/prod/2020/12/WhatDoesBCNFdo-VLDB1980.pdf,"$n$: size of database?
$k$: number of functional dependencies",n,O(n),O(1),,,NP-hard,https://dl.acm.org/doi/pdf/10.1145/990511.990513,Databases,,,,
69,4NF Decomposition,4NF Decomposition,Fourth Normal Form Decomposition,,4NF Decomposition for Functional and Multivalued Dependency Sets; 4NF Decomposition for Conflict-Free Dependency Sets; ,"4NF Decomposition is the problem of decomposing a relation schema into fourth normal form (4NF).

A relation schema $R^*$ is in fourth normal form (4NF) if, whenever a nontrivial multivalued dependency $X \rightarrow \rightarrow Y$ holds for $R^*$, then so does the functiunal dependency $X \rightarrow A$ for every column name $A$ of $R^*$. Intuitively all dependencies are the result of keys. In particular a 4NF relation schema can have no nontrivial multivalued dependencies that are not functional dependencies.",https://dl.acm.org/doi/abs/10.1145/320557.320571,"$n$: size of database?
$k$: number of functional dependencies",n,O(n),,,,,,Databases,,,,
69,4NF Decomposition,4NF Decomposition for Functional and Multivalued Dependency Sets,,4NF Decomposition,,"4NF Decomposition is the problem of decomposing a relation schema into fourth normal form (4NF). This variation specifies that the input dependency set has only functional and multivalued dependencies.

A relation schema $R^*$ is in fourth normal form (4NF) if, whenever a nontrivial multivalued dependency $X \rightarrow \rightarrow Y$ holds for $R^*$, then so does the functiunal dependency $X \rightarrow A$ for every column name $A$ of $R^*$. Intuitively all dependencies are the result of keys. In particular a 4NF relation schema can have no nontrivial multivalued dependencies that are not functional dependencies.",https://www.vldb.org/conf/1983/P186.PDF,"$n$: size of database?
$k$: number of functional dependencies",n,O(n),,,,,,,,,,
69,4NF Decomposition,4NF Decomposition for Conflict-Free Dependency Sets,,4NF Decomposition,,"4NF Decomposition is the problem of decomposing a relation schema into fourth normal form (4NF). This variation specifies that the input dependency set is conflict-free.

A relation schema $R^*$ is in fourth normal form (4NF) if, whenever a nontrivial multivalued dependency $X \rightarrow \rightarrow Y$ holds for $R^*$, then so does the functiunal dependency $X \rightarrow A$ for every column name $A$ of $R^*$. Intuitively all dependencies are the result of keys. In particular a 4NF relation schema can have no nontrivial multivalued dependencies that are not functional dependencies.",https://www.vldb.org/conf/1983/P186.PDF,"$n$: size of database?
$k$: number of functional dependencies",n,O(n),,,,,,,,,,
71,Disk Scheduling,Disk Scheduling,,,,"When disk requests arrive at the disk device, they are queued for service and a disk scheduling algorithm is used to decide which of a waiting queue of disk requests to serve next. ",https://dl.acm.org/doi/10.1145/98949.99156,$n$: number of requests,n,O(n),"O(n) for schedule, O(1) for seek distance",,,,,Operating Systems,,,,
72,The Vertex Cover Problem,The Vertex Cover Problem,VC,,"The Vertex Cover Problem, Degrees Bounded By 3; ",A vertex cover of a graph $G$ is a set $C$ of vertices such that every edge of $G$ has at least one endpoint in $C$. The vertex cover problem is to find a minimum-size vertex cover in a given graph $G$.,https://dl.acm.org/doi/pdf/10.1145/1101821.1101823,"$n$: number of vertices
$m$: number of edges
$k$: size of vertex cover",n,O(m + n),O(k),,,,,Combinatorics,,,,
72,The Vertex Cover Problem,"The Vertex Cover Problem, Degrees Bounded By 3",3DVC,The Vertex Cover Problem,,A vertex cover of a graph $G$ is a set $C$ of vertices such that every edge of $G$ has at least one endpoint in $C$. The vertex cover problem is to find a minimum-size vertex cover in a given graph $G$. This version of the problem is such that the input graph $G$ has all vertices' degree bounded by 3.,https://doi.org/10.1002/1097-0037(200007)35:4<253::AID-NET3>3.0.CO;2-K,"$n$: number of vertices
$m$: number of edges
$k$: size of vertex cover",n,O(m + n),O(k),,,,,Combinatorics,,,,
73,CFG Problems,CFG Parsing,,,,"Given a grammar $G$ and a string $s$, find the parse structure, or analysis, assigned to the string $s$ by the grammar $G$.",https://arxiv.org/pdf/cs/0112018.pdf,"$n$: length of the given string
$|G|$: size of the grammar",n,O(n + |G|),O(n),O(n^3),https://link.springer.com/chapter/10.1007%2F978-3-662-21545-6_18,,,,,,,
73,CFG Problems,CFG Recognition,,,,"Given a grammar $G$ and a string $s$, determine if the string $s$ can be derived by the grammar $G$.",https://arxiv.org/pdf/cs/0112018.pdf,"$n$: length of the given string
$|G|$: size of the grammar",n,O(n + |G|),O(1),O(n^2.38 * |G|),https://linkinghub.elsevier.com/retrieve/pii/S0022000075800468,,,,,,,
74,Finding Frequent Itemsets,Finding Frequent Itemsets,Finding Association Rules,,,"We assume there is a number $s$, called the support threshold. If $I$ is a set of items, the support for $I$ is the number of baskets for which $I$ is a subset. We say $I$ is frequent if its support is $s$ or more",http://infolab.stanford.edu/~ullman/mmds/ch6.pdf,$n$: total number of transactions (size of database),n,O(n),O(n),,,,,Combinatorics,,,,
75,Data Compression,Lossy Compression,,,,"The reduction or ideally elimination of redundancies in the original data to result in smaller required storage space is the goal of every compression scheme. There are two categories of data compression: lossy and lossless.

Lossy compression is achieved by only discarding the redundancies and out of human perception information and getting rid of those extra bits. ",https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8708945,$n$: number of items in input series of data,n,O(n),O(n),,,,,Image Processing,,,,
75,Data Compression,Lossless Compression,,,,"The reduction or ideally elimination of redundancies in the original data to result in smaller required storage space is the goal of every compression scheme. There are two categories of data compression: lossy and lossless.

Lossless compression is fully information-preserving and fully reversible.",https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8708945,$n$: number of items in input series of data,n,O(n),O(n),,,,,Image Processing,,,,
76,Factorization of Polynomials Over Finite Fields,Factorization of Polynomials Over Finite Fields,,,,Factor a given polynomial over a finite field into a product of irreducible polynomials.,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6768643,"$n$: degree of polynomial
$p$: characteristic of finite field",n,,,O(n^2),https://www.sciencedirect.com/science/article/abs/pii/0020019090901954,,,Numerical Analysis,,,,
77,Cryptanalysis of Linear Feedback Shift Registers,Cryptanalysis of Linear Feedback Shift Registers,,,,Find the shortest linear feedback shift register that can generate a given finite sequence of digits.,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1054260,$n$: size of input stream,n,,,,,,,Cryptography,,,,
78,Stable Matching Problem,Stable Marriage Problem,"Stable Matching Problem, SMP",Stable Roommates Problem,Almost Stable Marriage Problem; Boolean d-Attribute Stable Matching; Stable Matching Verification; Stable Pair Checking; ,"Given $n$ men and $n$ women, where each person has ranked all members of the opposite sex in order of preference, marry the men and women together such that there are no two people of opposite sex who would both rather have each other than their current partners. When there are no such pairs of people, the set of marriages is deemed stable.",http://www.eecs.harvard.edu/cs286r/courses/fall09/papers/galeshapley.pdf,$n$: number of men and number of women,n,O(n),O(n),O(n^2),http://www.dcs.gla.ac.uk/~davidm/pubs/7981.pdf,,,Combinatorics,,,,
78,Stable Matching Problem,Almost Stable Marriage Problem,,Stable Marriage Problem,,"The task in the Almost Stable Marriage Problem is to find a matching that minimises the number of unstable edges, but the matching does not have to be a maximum matching.",https://arxiv.org/pdf/0812.4893.pdf,$n$: number of men and number of women,n,O(n),O(n),,,,,Combinatorics,,,,
78,Stable Matching Problem,Stable Roommates Problem,SRP,,Stable Marriage Problem; ,"Given $2n$ participants, each of participant ranks the others in strict order of preference. A matching is a set of $n$ disjoint pairs of participants. A matching $M$ in an instance of SRP is stable if there are no two participants $x$ and $y$, each of whom prefers the other to their partner in $M$. Such a pair is said to block $M$, or to be a blocking pair with respect to $M$.",https://doi.org/10.1016/0196-6774(85)90033-1,$n$: number of pairs of roommates,n,O(n),O(n),,,,,Combinatorics,,,,
78,Stable Matching Problem,Boolean d-Attribute Stable Matching,,Stable Marriage Problem,,"SMP in the d-attribute model. In the d-attribute model, we assume that there are d different attributes (e.g. income, height, sense of humor, etc.) with a fixed, possibly objective, ranking of the men for each attribute. Each woman’s preference list is based on a linear combination of the attributes of the men, where each woman can have different weights for each attribute. Some women may care more about, say, height whereas others care more about sense of humor. Men’s preferences are defined analogously.",https://arxiv.org/pdf/1510.06452.pdf,"$n$: number of men and number of women
$d$: number of attributes",n,O(nd),O(n),,,,,Combinatorics,,,,
78,Stable Matching Problem,Stable Matching Verification,,Stable Marriage Problem,,"Verify that a given matching is stable, given the preferences",https://arxiv.org/pdf/1510.06452.pdf,$n$: number of men and number of women,n,O(n),O(1),,,,,Combinatorics,,,,
78,Stable Matching Problem,Stable Pair Checking,,Stable Marriage Problem,,"Verify that a given pairing is stable, given the preferences",https://arxiv.org/pdf/1510.06452.pdf,$n$: number of pairs of roommates,n,O(n),O(1),,,,,Combinatorics,,,,
79,Longest Path Problem,Longest Path on Interval Graphs,,,,"The longest path problem is the problem of finding a path of maximum length in a graph.

A graph $G$ is called interval graph if its vertices can be put in a one-to-one correspondence with a family $F$ of intervals on the real line such that two vertices are adjacent in $G$ if and only if the corresponding intervals intersect; $F$ is called an intersection model for $G$.",https://link.springer.com/content/pdf/10.1007/s00453-010-9411-3.pdf,"$n$: number of vertices
$m$: number of edges",n,O(m + n),,,,,,Combinatorics,,,,
80,Maximum Subarray Problem,Maximum Subarray,,,1D Maximum Subarray; 2D Maximum Subarray; Maximum Square Subarray; ,"Given a $d$-dimensional array $M$ with $n^d$ real-valued entries, find the $d$-dimensional subarray of $M$ which maximizes the sum of the elements it contains.",https://arxiv.org/pdf/1602.05837.pdf,"$n$: length of array
$d$: dimensionality of array",n^d,O(n^d),O(d),,,,,Combinatorics,,,,
80,Maximum Subarray Problem,1D Maximum Subarray,Maximum Subsequence,Maximum Subarray,,"Given an array $A$ of length $n$, find $i, j$ with $1\leq i \leq j \leq n$ maximizing $\sum^j_{x=i} A[x]$, that is, find a contiguous subarray of $A$ of maximum sum",https://arxiv.org/pdf/1602.05837.pdf,$n$: length of array,n,O(n),O(1),O(n),Kadane's algorithm,O(n),must read all of input,Combinatorics,,,,
80,Maximum Subarray Problem,2D Maximum Subarray,,Maximum Subarray,,"Given an $n \times n$ matrix $A$ of integers, find $i, j, k,l \in [n]$ with $i \leq j, k \leq l$ maximizing $\sum^j_{x=i}\sum^l_{y=k}A[x,y]$, that is, find a contiguous subarray of $A$ of maximum sum",https://arxiv.org/pdf/1602.05837.pdf,$n$: dimension of array,n^2,O(n^2),O(1),O(n^3 * ((log log n)/(log n))^(1/2)),https://www.sciencedirect.com/science/article/pii/S1571066104003135?via%3Dihub,Omega(n^{3-\epsilon}),Reduction from APSP,Combinatorics,,,,
80,Maximum Subarray Problem,Maximum Square Subarray,,Maximum Subarray,,Given an $n \times n$ matrix find a maximum subarray with sides of equal length.,https://arxiv.org/pdf/1602.05837.pdf,$n$: dimension of array,n^2,O(n^2),O(1),,,,,Combinatorics,,,,
81,Constructing Suffix Trees,Constructing Suffix Trees,,,,"Let $T = t_1 t_2 \cdots t_n, be a string over an alphabet $\Sigma$. Each string $x$ such that $T = uxv$ for some (possibly empty) strings $u$ and $v$ is a substring of $T$, and each string $T_i = t_i \cdots t_n$, where $1 \leq i \leq n + 1$ is a suffix of $T$; in particular, $T_{n+1} = \epsilon$ is the empty suffix. The set of all suffixes of $T$ is denoted $\sigma(T)$. The suffix trie $STrie(T)$ of $T$ is a trie representing $\sigma(T)$.

Suffix tree $STree(T)$ of $T$ is a data structure that represents $STrie(T)$ in space linear in the length $|T|$ of $T$. This is achieved by representing only a subset $Q' \cup \{ \perp \}$ of the states of $STrie(T)$. ",https://link.springer.com/content/pdf/10.1007/BF01206331.pdf,$n$: length of string,n,O(n),,,,,,Combinatorics,,,,
82,Ray Tracing,Ray Tracing,,,,Ray tracing is an image rendering technique in which rays are cast from the viewpoint and followed as they reflect off of objects in the scene.,https://graphics.stanford.edu/courses/Appel.pdf,,n,,,,,,,Image Processing,,,,
83,Entity Resolution,Entity Resolution,ER,,,"Entity resolution (ER) is the problem of matching records that represent the same real-world entity and then merging the matching records. ER is a well known problem that arises in many applications. An exhaustive ER process involves comparing all the pairs of records, which can be very expensive for large datasets.",https://dl.acm.org/doi/pdf/10.1145/1559845.1559870,"$n$: number of records
$k$: number of features",n,,,,,,,Combinatorics,,,,
84,Longest Palindromic Substring,Longest Palindromic Substring,,,,"Given a string of length $n$, find the palindromic substrings of maximal length.",https://link.springer.com/content/pdf/10.1007/BF01182773.pdf,$n$: length of given string,n,$O(n)$,"O(n) (if outputting multiple substrings, or if outputting the substrings themselves)",,,,,Combinatorics,,,,
85,AST to Code Translation,AST to Code Translation,,,,Translate a given abstract syntax tree (AST) into machine-readable code that uses as few registers as possible.,https://hillside.net/plop/plop2003/Papers/Jones-ImplementingASTs.pdf,$n$: number of nodes in the tree,n,$O(n)$,,,,,,Combinatorics,,,,
85,AST to Code Translation,Arithmetic Expression Binary Tree,,,,Translate a given arithmetic expression binary tree into machine-readable code that uses as few registers as possible.,https://dl.acm.org/doi/10.1145/236114.236117,$n$: number of nodes in the tree,n,$O(n)$,,,,,,,,,,
86,Graph Isomorphism Problem,"Graph Isomorphism, General Graphs",,,"Graph Isomorphism, Bounded Number of Vertices of Each Color; Graph Isomorphism, Trivalent Graphs; Graph Isomorphism, Bounded Vertex Valences; Largest Common Subtree; ","Given two graphs, determine whether they are isomorphic to one another.",https://onlinelibrary.wiley.com/doi/pdf/10.1002/jgt.3190010410,$n$: number of vertices in the larger graph,n,$O(n)$,$O(1)$,,,,,Combinatorics,,,,
86,Graph Isomorphism Problem,"Graph Isomorphism, Bounded Number of Vertices of Each Color",,"Graph Isomorphism, General Graphs",,"Given two colored graphs with the number of vertices of each color bounded, determine whether they are isomorphic to one another.",https://link.springer.com/content/pdf/10.1007/BF02104746.pdf,$n$: number of vertices in the larger graph,n,$O(n)$,$O(1)$,,,,,,,,,
86,Graph Isomorphism Problem,"Graph Isomorphism, Trivalent Graphs",,"Graph Isomorphism, General Graphs",,"Given two trivalent graphs (AKA cubic graphs--graphs in which each vertex has degree 3), determine whether they are isomorphic to one another.",https://link.springer.com/content/pdf/10.1007/BF02104746.pdf,$n$: number of vertices in the larger graph,n,$O(n)$,$O(1)$,,,,,,,,,
86,Graph Isomorphism Problem,"Graph Isomorphism, Bounded Vertex Valences",,"Graph Isomorphism, General Graphs",,"Given two graphs with the degree of each vertex bounded, determine whether they are isomorphic to one another.",https://link.springer.com/content/pdf/10.1007/BF02104746.pdf,$n$: number of vertices in the larger graph,n,$O(n)$,$O(1)$,,,,,,,,,
86,Graph Isomorphism Problem,Largest Common Subtree,LCST,"Graph Isomorphism, General Graphs",Subtree Isomorphism; ,Find a largest tree which occurs as a common subgraph in a given collection of trees.,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.41.4833&rep=rep1&type=pdf,$n$: number of vertices in the largest tree in the collection,n,$O(n)$,$O(n)$,,,,,Combinatorics,,,,
86,Graph Isomorphism Problem,Subtree Isomorphism,,Largest Common Subtree,,Determine whether a given tree is contained within another tree.,https://dl.acm.org/doi/pdf/10.1145/3093239,$n$: number of vertices in the larger graph,n,$O(n)$,$O(1)$,,,,,Combinatorics,,,,
87,Graph Realization Problems,Digraph Realization Problem,,,DAG Realization Problem; ,"Given a sequence $S := (a_1, b_1), \ldots, (a_n, b_n)$ with $a_i, b_i \in \mathbb{Z}_0^+$, does there exist a directed graph (no parallel arcs allowed) with labeled vertex set $V := \{v_1, \ldots , v_n\}$ such that for all $v_i \in V$ indegree and outdegree of $v_i$ match exactly the given numbers $a_i$ and $b_i$, respectively?",https://arxiv.org/pdf/1203.3636.pdf,$n$: number of degree pairs,n,$O(n)$,$O(1)$,$O(VE)$,https://linkinghub.elsevier.com/retrieve/pii/0012365X7390037X,,,Combinatorics,,,,
87,Graph Realization Problems,DAG Realization Problem,,Digraph Realization Problem,,"Given a sequence $S := (a_1, b_1), \ldots, (a_n, b_n)$ with $a_i, b_i \in \mathbb{Z}_0^+$, does there exist a directed acyclic graph (DAG) (no parallel arcs allowed) with labeled vertex set $V := \{v_1, \ldots , v_n\}$ such that for all $v_i \in V$ indegree and outdegree of $v_i$ match exactly the given numbers $a_i$ and $b_i$, respectively?",https://arxiv.org/pdf/1203.3636.pdf,$n$: number of degree pairs,n,$O(n)$,$O(1)$,,,NP-Complete,https://link.springer.com/chapter/10.1007/978-3-642-30870-3_29,Combinatorics,,,,
88,Duplicate Elimination,Duplicate Elimination,Record Linkage; De-Duplication; Instance Identification; Object Identification; Record Matching,,,"SQL does not eliminate duplicates implicitly. It allows to enter duplicate values on columns other than candidate key or if did not specified any keys. If the user wants to eliminate duplicate records, he has to use DISTINCT keyword in the query.

Databases, therefore, can have duplicate entries. The problem deals with identifying and removing duplicates from a database.",https://doi.org/10.1109/ICMV.2009.43,$n$: number of records,n,$O(n)$,$O(n)$,,,,,Databases,,,,
89,Hyperbolic Spline Interpolation,Hyperbolic Spline Interpolation,,,,"The problem of restoring complex curves and surfaces from discrete data so that their shape is preserved is called isogeometric interpolation. A very popular tool for solving this problem are hyperbolic splines in tension, which were introduced in 1966 by Schweikert. These splines have smoothness sufficient for many applications; combined with algorithms for the automatic selection of the tension parameters, they adapt well to the given data. Unfortunately, the evaluation of hyperbolic splines is a very difficult problem because of roundoff errors (for small values of the tension parameters) and overflows (for large values of these parameters). ",https://link.springer.com/content/pdf/10.1134/S0965542511050095.pdf,$n$: number of points,n,$O(n)$,$O(n)$,,,,,Numerical Analysis,,,,
90,Mesh Parameterization,Mesh Parameterization,,,,"Given any two surfaces with similar topology it is possible to compute a one-to-one and onto mapping between them. If one of these surfaces is represented by a triangular mesh, the problem of computing such a mapping is referred to as mesh parameterization.",https://dl.acm.org/doi/10.1145/1236246.1236287,,n,,,,,,,Image Processing,,,,
91,Maximum Likelihood Methods in Unknown Latent Variables,Maximum Likelihood Methods in Unknown Latent Variables,,,,"In this problem, the goal is to compute maximum-likelihood estimates when the observations can be viewed as incomplete data.",https://www.jstor.org/stable/2984875#metadata_info_tab_contents,"$n$: number of observations in sample
$r$: number of parameters + latent variables",n,,,,,,,Statistics,,,,
92,Collaborative Filtering,Matrix Factorization,,,,"Collaborative filtering is a technique used in recommendation systems. It analyzes relationships between users and interdependencies among products to identify new user-item associations.

A method of collaborative filtering uses matrix factorization. In its basic form, matrix factorization characterizes both items and users by vectors of factors inferred from item rating patterns.",https://doi.org/10.1109/MC.2009.263,$n$: dimension of matrix,n^2,,,,,,,,,,,
93,Feature Detection,Corner Detection,,,,"Conventionally, a corner is defined as the intersection point or the junction point between two or more straight line edges (i.e. edges which have discontinuities along a straight line). Corner detection is the problem of detecting such corners in a given image.",https://doi.org/10.1016/0031-3203(90)90118-5,,n,,,,,,,Image Processing,,,,
94,Feature Detection,Blob Detection,,,,The regions or points which have noticeable difference with their surroundings is called blob. Blob detection is the problem of detecting such blobs in a given image.,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7467122,,n,,,,,,,Image Processing,,,,
95,Culling,Culling,,,,"Culling is the process of rejecting primitives or objects in their entireity before rendering in the case that they would not be shown in the view, reducing unnecessary computations.",https://dl.acm.org/doi/pdf/10.1145/253284.253312,,n,,,,,,,Image Processing,,,,
96,Filtering Problem (Stochastic Processes),Filtering Problem (Stochastic Processes),,,,"The filtering problem is to obtain the best linear estimate $\hat{z}_t$ of $z_t$ based on the past observations ($y_s | s\leq t)$. Abstractly, the solution to the problem of filtering corresponds to explicitly computing

$\hat{z}_t = P_t^y(z_t)$

where $P_t^y$ is the projection operator onto the Hilbert space $H_t^y$.",https://ieeexplore.ieee.org/abstract/document/506400,$n$: number of dimensions in state space,n,,,,,,,Statistics,,,,
97,Optimal Policies for MDPs,Optimal Policies for MDPs,,,,"In an MDP, a policy is a choice of what action to choose at each state An Optimal Policy is a policy where you are always choosing the action that maximizes the “return”/”utility” of the current state. The problem here is to find such an optimal policy from a given MDP.",https://mas.cs.umass.edu/classes/cs683/lectures-2010/Lec13_MDP2-F2010-4up.pdf,$n$: number of states,n,,,,,,,Robotics,,,,
98,The Set-Covering Problem,Unweighted Set-Covering,,Weighted Set-Covering,,"Given a universe $U$, i.e. a set of elements $\{1, 2, \ldots, n\}$, and a collection $S$ of $m$ sets whose union is the universe, identify the smallest sub-collection of $S$ whose union is the universe.",https://dl.acm.org/doi/pdf/10.1145/237814.237991,"$U$: the universe of elements to be covered
$S$: the collection of sets
$n$: number of elements in the universe
$m$: number of sets in the collection
$H(x)$: the $x^{th}$ Harmonic number",n,,,,,$\Omega(n^{2-\epsilon}\poly(d))$,Hypothesis #9 (#5 in the linked paper),Combinatorics,,,,
98,The Set-Covering Problem,Weighted Set-Covering,,,Unweighted Set-Covering; ,The set-covering problem where each set $s\in S$ is assigned a weight and the goal is to find the minimum weight sub-collection of $S$ that covers the universe.,https://www.jstor.org/stable/pdf/3689577.pdf,"$U$: the universe of elements to be covered
$S$: the collection of sets
$n$: number of elements in the universe
$m$: number of sets in the collection
$H(x)$: the $x^{th}$ Harmonic number",n,,,,,$\Omega(n^{2-\epsilon}\poly(d))$,Hypothesis #9 (#5 in the linked paper),Combinatorics,,,,
99,Motif Search,Motif Search,,,,"Motif search is the problem of identifying motifs, recurring or conserved patterns, in the strings (typically biological sequence data sets).",https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-8-S7-S21#MOESM6,"$n$: size of set of input strings
$m$: size of input strings
$k$: length of substrings
$\sigma$: function $V(k, m)$ defined as the number of $k$-mers that are at most $m$ Hamming distance from the motif space",mn,O(mn),,,,$\Omega(n)$,Trivial,Bioinformatics,,,,
100,All Maximal Non-Branching Paths in a Graph,All Maximal Non-Branching Paths in a Graph,,,,"A node $v$ in a directed graph $G$ is called a 1-in-1-out node if its indegree and outdegree are both equal to 1, i.e., $in(v) = out(v) = 1$.  We can rephrase the definition of a ""maximal non-branching path"" from the main text as a path whose internal nodes are 1-in-1-out nodes and whose initial and final nodes are not 1-in-1-out nodes.

The problem is to find all maximal non-branching paths in a given graph.",https://rosalind.info/problems/ba3m/,"$n$: number of vertices
$m$: number of edges",n,O(m + n),,,,,,Bioinformatics,,,,
101,Link Analysis,InDegree Analysis,,,,"A simple heuristic that can be viewed as the predecessor of all Link Analysis Ranking algorithms is to rank the pages according to their popularity (also referred to as visibility [Marchiori 1997]). The popularity of a page is measured by the number of pages that link to this page. We refer to this algorithm as the InDegree algorithm, since it ranks pages according to their in-degree in the graph $G$. That is, for every node $i$, $a_i = |B(i)|$.",https://dl.acm.org/doi/pdf/10.1145/1052934.1052942,"$n$: number of pages
$m$: number of hyperlinks
$z$: # of topics/categories",n,,,,,,,Combinatorics,http://snap.stanford.edu/class/cs224w-readings/borodin05pagerank.pdf,https://ipsen.math.ncsu.edu/ps/simax43980.pdf,,
102,Image Compositing,Image Compositing,,,,Image compositing is the act of creating a single image from multiple images.,https://dl.acm.org/doi/pdf/10.1145/800031.808606,,n,,,,,,,Image Processing,,,,
103.1,Texture Synthesis,Texture Synthesis,,,,"Given a texture sample, synthesize a new texture that, when perceived by a human observer, appears to be generated by the same underlying stochastic process.",https://dl.acm.org/doi/abs/10.1145/344779.345009,$n$: number of pixels,n,,,,,,,Image Processing,,,,
103.2,Distributed Locking Algorithms,Distributed Locking Algorithms,,,,"The purpose of a lock is to ensure that among several nodes that might try to do the same piece of work, only one actually does it (at least only one at a time). That work might be to write some data to a shared storage system, to perform some computation, to call some external API, or suchlike. At a high level, there are two reasons why you might want a lock in a distributed application: for efficiency or for correctness.",https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html,"$n$: number of clients
$f$: number of files",n,,,,,,,Operating Systems,,,,
104,Cyclic Peptide Sequencing Problem,Cyclic Peptide Sequencing Problem,CPSP,,,"Given an experimental $MS^3$ spectrum $S$, find a cyclic peptide $P$ maximizing the number of shared masses between $S$ and the theoretical spectrum of $P$.",https://link.springer.com/content/pdf/10.1007/978-3-540-78839-3_16.pdf,"$n$: size of peptide, in daltons
$m$: number of elements in experimental spectrum",n,,,,,,,Bioinformatics,,,,
105,Texture Mapping,Diffuse Reflection,,,,"Texture mapping means the mapping of a function onto a surface in 3D. The domain of the function can be one, two, or three dimensional, and it can be represented by either an array or a mathematical function.

The source image (texture) is mapped onto a surface in 3D object space, which is then mapped to the destination image (screen) by the viewing projection. Texture space is labeled $(u, v)$, object space is labeled $(x_0, y_0, z_0)$, and screen space is labeled $(x, y)$.

Diffuse reflection is the light that is scattered off of the incident surface.",https://web.archive.org/web/20100727005751/http://www.cs.berkeley.edu/~ravir/6998/papers/p165-hanrahan.pdf,,n,,,,,,,Image Processing,,,,
106,Texture Mapping,Specular Reflection,,,,"Texture mapping means the mapping of a function onto a surface in 3D. The domain of the function can be one, two, or three dimensional, and it can be represented by either an array or a mathematical function.

The source image (texture) is mapped onto a surface in 3D object space, which is then mapped to the destination image (screen) by the viewing projection. Texture space is labeled $(u, v)$, object space is labeled $(x_0, y_0, z_0)$, and screen space is labeled $(x, y)$.

Specular reflection is the light that is perfectly reflected off of the incident surface.",https://web.archive.org/web/20100727005751/http://www.cs.berkeley.edu/~ravir/6998/papers/p165-hanrahan.pdf,,n,,,,,,,Image Processing,,,,
107,Point-in-Polygon,Point-in-Polygon,,,,"With a given polygon $P$ and an arbitrary point $q$, determine whether point $q$ is enclosed by the edges of the polygon.",https://ir.nctu.edu.tw/bitstream/11536/749/1/A1997WM15100010.pdf,$n$: number of edges of polygon,n,,,,,,,Image Processing,,,,
108,Image Segmentation,Image Segmentation,,,,"Image segmentation is the division of an image into different regions, each having certain properties. It is the first step of image analysis which aims at either a description of an image or a classification of the image if a class label is meaningful. An example of the former is the description of an office
scene. An example of the latter is the classification of the image of a cancerous cell. Image segmentation is a critical component of an image recognition system because errors in segmentation might propagate to feature extraction and classification.",http://www.ttcenter.ir/ArticleFiles/ENARTICLE/3405.pdf,,n,,,,,,,Image Processing,,,,
109,Mesh Simplification,Mesh Simplification,,,,"Given a surface mesh, accurately simplify it so that you may render the mesh accurately with less computing power.",http://webdocs.cs.ualberta.ca/~anup/Courses/604_3DTV/Presentation_files/Polygon_Simplification/7.pdf,,n,,,,,,,Image Processing,,,,
110,Clock Synchronization in Distributed Systems,Clock Synchronization in Distributed Systems,,,,The difference between the largest and the smallest clock values among all stations in a Mobile Ad Hoc Network (MANET) is called the maximum clock offset. The goal is to minimize the maximum clock offset.,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4359404,$n$: number of nodes in network,n,,,,,,,Operating Systems,,,,
111,POMDPs,POMDPs,Partially Observable Markov Decision Process,,,"At (discrete) time step $t$, the environment is assumed to be in some state $X_t$. The agent then performs an action (control) $A_t$, whereupon the environment (stochastically) changes to a new state $X_{t+1}$. The agent doesn’t see the environment state, but instead receives an observation $Y_t$, which is some (stochastic) function of $X_t$. (If $Y_t = X_t$, the POMDP reduces to a fully observed MDP.) In addition, the agent receives a special observation signal called the reward, $R_t$. The POMDP is characterized by the state transition function $P(X_{t+1}|X_t, A_t)$, the observation function $P(Y_t|X_t, A_{t−1})$, and the reward function $E(R_t|X_t, A_{t−1})$. The goal of the agent is to learn a policy $\pi$ which maps the observation history (trajectory) into an action $A_t$ to maximize $\pi$’s quality or value.",https://www.techfak.uni-bielefeld.de/~skopp/Lehre/STdKI_SS10/POMDP_survey.pdf,,,,,,,,,Robotics,,,,
112,Rasterization,Rasterization,,,,"Raster-scan displays are most commonly driven by a frame buffer, a memory that stores the color value for every picture element on the screen and refreshes the display continuously. The process of generating these picture clement values from a geometric description of the image is known as rasterization.",https://dl.acm.org/doi/abs/10.1145/74333.74370,,n,,,,,,,Image Processing,,,,
113,Texture Mapping,Environment Mapping,Reflection Mapping; Illumination Mapping;,,,"Texture mapping means the mapping of a function onto a surface in 3D. The domain of the function can be one, two, or three dimensional, and it can be represented by either an array or a mathematical function.

The source image (texture) is mapped onto a surface in 3D object space, which is then mapped to the destination image (screen) by the viewing projection. Texture space is labeled $(u, v)$, object space is labeled $(x_0, y_0, z_0)$, and screen space is labeled $(x, y)$.

Illumination mapping is the mapping of specular or diffuse reflection. It is also known as reflection mapping or environment mapping.",https://doi.org/10.1109/MCG.1986.276672,,n,,,,,,,Robotics,,,,
114,Occupancy Grid Mapping,Occupancy Grid Mapping,OGM,,,"Assuming a robot's pose is known, generate a occupancy grid mapping of the area. The occupancy grid is a multidimensional random field that maintains stochastic estimates of the occupancy state of the cells in a spatial lattice. To construct a sensor-derived map of the robot’s world, the cell state estimates are obtained by interpreting the incoming range readings using probabilistic sensor models. Bayesian estimation procedures allow the incremental updating of the occupancy grid using readings taken from several sensors over multiple points of view. ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=30720,,n,,,,,,,Robotics,,,,
115,SLAM Algorithms,SLAM Algorithms,,,,Simultaneous localization and mapping (SLAM) is the computational problem of constructing or updating a map of an unknown environment while simultaneously keeping track of an agent's location within it.,http://ais.informatik.uni-freiburg.de/teaching/ss12/robotics/slides/12-slam.pdf,,n,,,,,,,Robotics,,,,
116,d-Neighborhood of a String,d-Neighborhood of a String,,,,"Given a DNA string pattern and an integer $d$, find the collection of strings that are within a $d$-neighborhood of the given pattern. A $d$-neighborhood is the set of all $k$-mers whose Hamming distance from the pattern is at most $d$.",https://rosalind.info/problems/ba1n/,"$n$: length of string
$d$: neighborhood distance threshold
$\sigma$: size of alphabet",n,,,,,,,Bioinformatics,,,,
117,Maximum Cut,Maximum Cut,Max Cut,,,"Given a graph $G=(V, E)$ with edge weights $c_e > 0$ for all $e\in E$, find a cut $\delta(W)$ such that $c(\delta(W)):=\Sigma_{e\in \dela(W)} c_e$ is as large as possible.",https://doi.org/10.1016/0167-6377(81)90020-1,"$n$: number of vertices
$m$: number of edges",n,,,,,,,Combinatorics,,,,
118,Wiener Index,Minimum Wiener Connector Problem,,,,"Given a connected graph $G = (V, E)$ and a set $Q \subseteq V$ of query vertices, find a subgraph of $G$ that connects all query vertices and has minimum Wiener index.",https://dl.acm.org/doi/10.1145/2723372.2749449,"$n$: number of vertices
$m$: number of edges
$q$: number of query vertices",n,O(n+m),O(n),$\tilde{O}(qm) for an O(1)-approximation,https://dl.acm.org/doi/10.1145/2723372.2749449,NP-Hard,https://dl.acm.org/doi/10.1145/2723372.2749449,Combinatorics,,,,
118,Wiener Index,Undirected Wiener Index,,,,Calculate the sum of the lengths of the shortest paths between all pairs of vertices in an undirected graph (typically in the chemical graph representing the non-hydrogen atoms in the molecule).,https://arxiv.org/pdf/1712.08147v2.pdf,$n$: number of vertices (number of non-hydrogen atoms in the molecule),n,O(n+m),O(1),,,,,Combinatorics,,,,
119,Determinant of Matrices with Integer Entries,Determinant of Matrices with Integer Entries,,,,"Calculate the determinant of a given matrix with integer matrices. For such matrices, the determinant is also an integer.",https://www.ams.org/journals/mcom/1968-22-103/S0025-5718-1968-0226829-0/S0025-5718-1968-0226829-0.pdf,$n$: dimension of matrix,n^2,O(n^2),O(1),,,,,Numerical Analysis,,,,
120,Integer Relation,Integer Relation Among Reals,,,Integer Relation Among Integers; ,"Given a vector $x \in \mathbb{R}^n$, find an integer relation, i.e. a non-zero vector $m \in \mathbb{Z}^n$ such that $<x, m> = 0$",https://epubs.siam.org/doi/pdf/10.1137/0218059,$n$: dimensionality of vectors,n,O(n),O(n),O(n^3),Algo #925,,,Numerical Analysis,,,,
120,Integer Relation,Integer Relation Among Integers,,Integer Relation Among Reals,,"Given a vector $x \in \mathbb{Z}^n$, find an integer relation, i.e. a non-zero vector $m \in \mathbb{Z}^n$ such that $<x, m> = 0$",https://epubs.siam.org/doi/pdf/10.1137/0218059,$n$: dimensionality of vectors,n,O(n),O(n),,,,,Numerical Analysis,,,,
122,Sequence-to-Graph Alignment,Sequence-To-Graph Alignment,Pattern Matching on Hypertext,,,"This is pattern matching where you are given a pattern and a hypertext graph. The hypertext model is that the text forms a graph of $N$ nodes and $E$ edges, where a string is stored inside each node, and the edges indicate alternative texts that may follow the current node. The pattern is still a simple string of length $m$. It is also customary to transform this graph into a one-character hypertext, i.e. one where there is exactly one character per node (by converting each node containing a text of length $l$ into a chain of $l$ nodes). This graph has $n$ nodes and $e$ edges (note that $n$ is the text size and $e = n − N + E$).

Additonal notes: (changes are allowed in the query sequence alone) Linear gap penalty?",https://doi.org/10.1016/S0304-3975(99)00333-3,"$N$: number of vertices in original hypertext graph
$E$: number of edges in original hypertext graph
$m$: length of pattern
$n$: number of vertices in converted graph (total text size)
$e$: number of edges in converted graph",N,O(N + E + m),O(n + e),,,,,Combinatorics,,,,
123,Logarithm Calculations,Discrete Logarithm Over Finite Fields,,,,"Let $F_{p^n}$ denote the finite field of $p^n$ elements, where $p$ is a prime. Let $x$ be a generator for the multiplicative group of $F_{p^n}$. The discrete logarithm problem over $F_{p^n}$ is to compute, for any given nonzero $h \in F_{p^n}$, the least nonnegative integer $e$ such that $x^e=h$. In this context we shall write $e=\log_x h$.",https://doi.org/10.1006/inco.1998.2761,$n$: number of digits/bits in the order of the finite group,n,,,,,,,Statistics,,,,
124,Rod-Cutting Problem,Rod-Cutting Problem,,,,"Given a rod of length $n$, and prices $p_i$ for which one can sell a segment of the rod of length $i$ ($1 \leq i \leq n$), find the splitting of the rod for which one can earn the most money once they sell the rod segments produced.",https://web.stanford.edu/class/archive/cs/cs161/cs161.1168/lecture12.pdf,$n$: length of rod,n,,,O(n^2),dynamic programming,,,Combinatorics,,,,
125,Self-Balancing Trees Creation,Self-Balancing Trees Creation,,,,Create a self-balancing tree given a list of elements.,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4567957,$n$: size of tree,n,O(n),O(n),,,,,Combinatorics,,,,
126,Self-Balancing Trees Insertion,Self-Balancing Trees Insertion,,,,Insert a given element into a self-balancing tree.,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4567957,$n$: size of tree,n,O(n),O(n),,,,,Combinatorics,,,,
127,Self-Balancing Trees Deletion,Self-Balancing Trees Deletion,,,,Delete a given element from a self-balancing tree.,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4567957,$n$: size of tree,n,O(n),O(n),,,,,Combinatorics,,,,
128,Self-Balancing Trees Search,Self-Balancing Trees Search,,,,Search for a given element within a self-balancing tree.,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4567957,$n$: size of tree,n,O(n),O(1),,,,,Combinatorics,,,,
129,Transitive Reduction Problem,Transitive Reduction Problem of Directed Graphs,,,,"A directed graph $G^t$ is said to be a transitive reduction of the directed graph $G$ provided that (i) $G$ has a directed path from vertex $u$ to vertex $v$ if and only if $G$ has a directed path from vertex $u$ to vertex $v$, and (ii) there is no graph with fewer arcs than $G^t$ satisfying condition (i). The problem asks to find such a graph $G^t$ for a given digraph $G$.",https://epubs.siam.org/doi/pdf/10.1137/0201008,"$n$: number of vertices
$m$: number of edges",n,O(n+m),O(n^2),O(n^omega) where omega is the exponent on boolean matrix multiplication,https://epubs.siam.org/doi/pdf/10.1137/0201008,Omega(n^2),Easily derived (equal to output size),Combinatorics,,,,
130,Change-Making Problem,Change-Making Problem,,,,"Given an unlimited amount of coins of denominations $c_1, \ldots, c_n$, and a desired sum $S$, find the minimum number of coins necessary to make $S$.",https://dl.acm.org/doi/10.1145/321864.321874,"$n$: number of coin denominations
$S$: sum to be made",n,O(n),,O(nS),dynamic programming,,,Combinatorics,,,,
131,Turnpike Problem,Turnpike Problem,,,,"Given $n$ points and $\binom{n}{2}$ distances, find each distance's corresponding pair of points.",http://hariharan-ramesh.com/ppts/turnpike.pdf,$n$: number of points,n,,,O(2^n n \log n),http://hariharan-ramesh.com/ppts/turnpike.pdf,,,Combinatorics,https://sandbox.dodona.be/en/activities/1441444585/description/sKfgfbq-Wnx-ufBY/media/Dakic2000.pdf,<= see this reference as well,,
132,n-Queens Problem,Counting Solutions,,,,"How many ways can one put $n$ queens on an $n \times n$ chessboard so that no two queens attack each other? In other words, how many points can be placed on an $n \times n$ grid so that no two are on the same row, column, or diagonal?",https://doi.org/10.1080/00029890.1994.11997004,"$n$: number of queens, size of chessboard",n^2,,,O(2^n),https://dl.acm.org/citation.cfm?id=1243380,,,Combinatorics,,,,
132,n-Queens Problem,Constructing Solutions,,,,What are all of the ways can one put $n$ queens on an $n \times n$ chessboard so that no two queens attack each other?,https://doi.org/10.1080/00029890.1994.11997004,"$n$: number of queens, size of chessboard",n^2,,,O(2^n),https://dl.acm.org/citation.cfm?id=1243380,,,Combinatorics,,,,
132,n-Queens Problem,n-Queens Completion,,,,"Given an $n \times n$ chessboard that already has $k$ queens on it, complete the board such that there are $n$ queens, all of which cannot attack each other.",https://doi.org/10.1080/00029890.1994.11997004,"$n$: size of chessboard
$k$: number of queens given",n^2,,,,,,,Combinatorics,,,,
133,Median String Problem,Median String Problem with Unbounded Alphabets,,,,"Given an unbounded alphabet $\Sigma$, a set $W$ of strings over $\Sigma$, and the Levenshtein distance between strings, find a string over $\Sigma$ that minimizes the sum of distances to the strings of $W$.",https://link.springer.com/content/pdf/10.1007/3-540-44888-8_23.pdf,$n$: number of strings,n,,,2^O(n),https://link.springer.com/content/pdf/10.1007/3-540-44888-8_23.pdf,,,Combinatorics,,,,
133,Median String Problem,Median String Problem with Bounded Alphabets,,,,"Given a bounded alphabet $\Sigma$, a set $W$ of strings over $\Sigma$, and the Levenshtein distance between strings, find a string over $\Sigma$ that minimizes the sum of distances to the strings of $W$.",https://link.springer.com/content/pdf/10.1007/3-540-44888-8_23.pdf,$n$: number of strings,n,,,2^O(n),https://link.springer.com/content/pdf/10.1007/3-540-44888-8_23.pdf,,,Combinatorics,,,,
133,Median String Problem,Median String Problem with Binary Alphabets,,,,"Given a binary alphabet $\Sigma$, a set $W$ of strings over $\Sigma$, and the Levenshtein distance between strings, find a string over $\Sigma$ that minimizes the sum of distances to the strings of $W$.",https://link.springer.com/content/pdf/10.1007/3-540-44888-8_23.pdf,$n$: number of strings,n,,,O(2^n),https://link.springer.com/content/pdf/10.1007/3-540-44888-8_23.pdf,,,Combinatorics,,,,
134,Frequent Words with Mismatches Problem,Frequent Words with Mismatches Problem,,,,"Given two strings, determine the most frequent substring with at most $k$ mismatches, where mismatches are not counted towards the length of the substring.",https://academic.oup.com/bioinformatics/article/30/14/2000/2391348,"$n$: length of string
$k$: length of words
$d$: number of allowed mismatches
$\sigma$: size of alphabet",n,,,O(n^2),?,,,Combinatorics,,,,
135,Tower of Hanoi,Tower of Hanoi,,,,"The Tower of Hanoi puzzle consists of $n$ discs, no two of the same size, stacked on $p \geq 3$ vertical pegs, in such a way that no disc lies on top of a smaller disc. A permissible $move$ is to take the top disc from one of the pegs and move it to one of the other pegs, as long as it is not placed on top of a smaller disc. Initially, they are all stacked on the first peg. The goal is to end up with them all stacked on the last peg.",https://www.fmf.uni-lj.si/~klavzar/preprints/topdiscs-scan.pdf,"$n$: number of discs
$p$: number of pegs",n,,,,,,,Combinatorics,,,,
136,The Frequent Words Problem,The Frequent Words Problem,The Frequent $k$-mers Problem,,,"Given a string of length $n$ and in input integer $k$, determine the most frequent $k$-mers in the string, i.e. the most frequent words of length $k$.",https://bioinformaticsalgorithms.com/data/debugdatasets/replication/FrequentWordsProblem.pdf,"$n$: length of string
$k$: length of words
$\sigma$: size of alphabet",n,,,O(n),http://bioinformaticsalgorithms.com/data/debugdatasets/replication/FrequentWordsProblem.pdf,,,Statistics,,,,
137,Integral Equations,Fredholm Equations,,,,"Integral equations are equations where an unknown function appears under an integral sign.

Fredholm equations have both limits of integration fixed, and there are three types of Fredholm equations.",https://books.google.com/books?hl=en&lr=&id=JFU0ltx0E68C&oi=fnd&pg=PR3&dq=integral+equations&ots=Kp98jJWIJT&sig=CXobYQkw_g35JhZ6qKjdy7P1idw#v=onepage&q=integral%20equations&f=false,,n,,,,,,,Numerical Analysis,,,,
137,Integral Equations,Volterra Equations,,,,"Integral equations are equations where an unknown function appears under an integral sign.

Volterra equations have one limit of integration fixed while the other is a variable.",https://books.google.com/books?hl=en&lr=&id=JFU0ltx0E68C&oi=fnd&pg=PR3&dq=integral+equations&ots=Kp98jJWIJT&sig=CXobYQkw_g35JhZ6qKjdy7P1idw#v=onepage&q=integral%20equations&f=false,,n,,,,,,,Numerical Analysis,,,,
138,One-Way Hash Functions,Keyed Hash Functions,,,,"A hash function, otherwise known as a one-way hash function, takes an arbitrary message of arbitrary length and creates an output (a hash) of a fixed length. The main characteristics of a cryptographic hash function are that given a message, it is easy to compute the hash; given the hash, it is difficult to compute the message; and that given a message, it is difficult to find a different message that would produce the same hash (this is known as a collision).

A keyed hash function takes a message and a secret key as input and outputs a fixed-length hash.",https://doi.org/10.1016/B0-12-227240-4/00054-X,n: length of message,n,,,,,,,Cryptography,,,,
138,One-Way Hash Functions,Unkeyed Hash Functions,,,,"A hash function, otherwise known as a one-way hash function, takes an arbitrary message of arbitrary length and creates an output (a hash) of a fixed length. The main characteristics of a cryptographic hash function are that given a message, it is easy to compute the hash; given the hash, it is difficult to compute the message; and that given a message, it is difficult to find a different message that would produce the same hash (this is known as a collision).

An unkeyed hash function takes just a message as input and outputs a fixed-length hash.",https://doi.org/10.1016/B0-12-227240-4/00054-X,n: length of message,n,,,,,,,Cryptography,,,,
139,Secret Sharing,Secret Sharing,,,,"Secret Sharing is the splitting up of a secret amongst a group such that no individual can learn the entire secret alone, but when a sufficient amount of the group comes together with their parts of the secret, they can reconstruct the secret.",https://doi.org/10.1145%2F359168.359176,"$n$: size of the group the secret is being shared with
$t$: threshold number of players",n,,,,,,,Cryptography,,,,
140,Solutions to Nonlinear Equations,Solutions to Nonlinear Equations,,,,Compute the solutions to a given nonlinear equation of the form $f(x) = 0$.,https://link.springer.com/content/pdf/10.1007/s11075-006-9015-9.pdf,"$\epsilon$: (additive) tolerance error
$a, b$: endpoint values, with $b>a$
$n_{max}$: maximum number of iterations$",n_max,,,,,,,Numerical Analysis,,,,
141,Block Ciphers,Block Ciphers,,,,"A block cipher is a pair of functions $E: \{0, 1\}^k \times \{0, 1\}^n \rightarrow \{0, 1\}^n$ and $D: \{0, 1\}^k \times \{0, 1\}^n \rightarrow \{0, 1\}^n$ that encode and decode a length $n$ string with a length $k$ key.",https://www.cs.ucdavis.edu/~rogaway/classes/227/spring05/book/main.pdf,"$n$: text length (block size)
$k$: key length",n,,,,,,,Cryptography,,,,
142,Polynomial Interpolation,Polynomial Interpolation,,,,"Given a finite number of points $x_1, \ldots , x_n$, some real constants $y_1, \ldots , y_n$ and a subspace $V$ of $\Pi^d$, find a polynomial $p \in V$, such that

$p(x_j) = y_j$, $j = 1, ... , n$",https://link.springer.com/content/pdf/10.1023/A:1018981505752.pdf,"$n$: number of points
$d$: dimension of space",n,,,,,,,Numerical Analysis,,,,
143,Greatest Common Divisor,Greatest Common Divisor,GCD,,,"Let $a_1, \ldots, a_m$ be given nonzero integers. Then $g$ is called the greatest common divisor (GCD) of $a_1, \ldots, a_m$ if and only if it is the largest integer that divides all $a_1, \ldots, a_m$.",https://dl.acm.org/doi/pdf/10.1145/321662.321664,$n$: sum of number of bits among the integers,n,,,,,,,Statistics,,,,
145,Interval Scheduling,Unweighted Interval Scheduling,,,,"Given are $n$ intervals of the form $[s_j , f_j)$ with $s_j < f_j$, for $j = 1, \ldots , n$. These intervals are the jobs that require uninterrupted processing during that interval. We will assume (without loss of generality) that the $s_j$’s and the $f_j$’s are nonnegative integers. We say that two intervals (or jobs) overlap if their intersection is nonempty, otherwise they are called disjoint. Further, there are machines. In the basic interval scheduling problem each machine can process at most one job at a time and is always available, i.e. each machine is continuously available in $[0,\infty)$. We assume that, when processed, each job is assigned to a single machine, thus, we do not allow interrupting a job and resuming it on another machine, unless explicitly stated otherwise. The basic interval scheduling problem is now to process all jobs using a minimum number of machines. In other words, find an assignment of jobs to machines such that no two jobs assigned to the same machine overlap while using a minimum number of machines. We call an assignment of (a subset of) the jobs to the machines a schedule.",https://onlinelibrary.wiley.com/doi/pdf/10.1002/nav.20231,"$n$: number of tasks (intervals)
$k$: number of machines (resources)",n,,,,,,,Operating Systems,,,,
145,Interval Scheduling,"Unweighted Interval Scheduling, Online",,,,"Given are $n$ intervals of the form $[s_j , f_j)$ with $s_j < f_j$, for $j = 1, \ldots , n$. These intervals are the jobs that require uninterrupted processing during that interval. We will assume (without loss of generality) that the $s_j$’s and the $f_j$’s are nonnegative integers. We say that two intervals (or jobs) overlap if their intersection is nonempty, otherwise they are called disjoint. Further, there are machines. In the basic interval scheduling problem each machine can process at most one job at a time and is always available, i.e. each machine is continuously available in $[0,\infty)$. We assume that, when processed, each job is assigned to a single machine, thus, we do not allow interrupting a job and resuming it on another machine, unless explicitly stated otherwise. The basic interval scheduling problem is now to process all jobs using a minimum number of machines. In other words, find an assignment of jobs to machines such that no two jobs assigned to the same machine overlap while using a minimum number of machines. We call an assignment of (a subset of) the jobs to the machines a schedule.

This is the online version of the problem.",https://onlinelibrary.wiley.com/doi/pdf/10.1002/nav.20231,"$n$: number of tasks (intervals)
$k$: number of machines (resources)",n,,,,,,,Operating Systems,,,,
145,Interval Scheduling,Weighted Interval Schedule Maximization Problem (ISMP),Weighted Activity Selection Problem,,,"In Weighted Interval Scheduling, each interval has an associated weight. The goal is to maximize the weights of the accepted (and not interrupted) intervals.",https://onlinelibrary.wiley.com/doi/pdf/10.1002/nav.20231,"$n$: number of tasks (intervals)
$k$: number of machines (resources)",n,,,,,,,Operating Systems,,,,
147,Deadlock Avoidance,Deadlock Avoidance,,,Dining Philosophers Problem; ,"A deadlock means that the processing of some parts, once started, cannot finish because each of these parts requests for its advancement some resource(s) currently held by some other part(s) in this set.

In a deadlock avoidance approach, the controller must ensure that the granting of resources to any process will lead to a resulting state which is “safe,” i.e., a state from which all the parts being processed can terminate.",https://doi.org/10.1109/TRA.2002.801048,"$n$: number of processes
$m$: number of resource types",n,,,,,,,Operating Systems,,,,
146,Deadlock Avoidance,Dining Philosophers Problem,,Deadlock Avoidance,,"There are $n$ philosophers numbered 0 through $n-1$, seated around a circle table. Their only problem--besides philosophy--is that the dish served is a very difficult kind of spaghetti, that has to be eaten with two forks. There are two forks next to each plate, so that presents no difficulty: as a consequence, however, no two neighbors may be eating simultaneously. The philosophers' lives consist of an alternation between eating and thinking. The goal is to devise a strategy such that no philosopher is stuck thinking forever and each philosopher may eat at reasonable intervals.",https://www.cs.utexas.edu/~EWD/ewd03xx/EWD310.PDF,$n$: number of philosophers,n,,,,,,,Operating Systems,,,,
148,Page Replacements,Offline,,,,"When page fault occurs during the program execution, operating systems use page replacement algorithms to select a victim page from primary memory and makes room for the required page.",https://www.researchgate.net/profile/Gyanendra-Kumar-3/publication/319467661_A_Novel_Longest_Distance_First_Page_Replacement_Algorithm/links/59b209f1aca2728472d14684/A-Novel-Longest-Distance-First-Page-Replacement-Algorithm.pdf,"$n$: number of page requests
$k$: number of pages able to fit in cache",n,,,,,,,Operating Systems,,,,
148,Page Replacements,Online,,,,"When page fault occurs during the program execution, operating systems use page replacement algorithms to select a victim page from primary memory and makes room for the required page.",https://www.researchgate.net/profile/Gyanendra-Kumar-3/publication/319467661_A_Novel_Longest_Distance_First_Page_Replacement_Algorithm/links/59b209f1aca2728472d14684/A-Novel-Longest-Distance-First-Page-Replacement-Algorithm.pdf,"$n$: number of page requests
$k$: number of pages able to fit in cache",n,,,,,,,Operating Systems,,,,
149,Recovery,"Steal, No-Force",,,,"Recovery is the process of reverting back to a safe state prior to a system failure.

With a Steal/No-Force policy, the recovery algorithm will write possibly uncommited data to memory, while not forcing all commits to memory.",https://dsf.berkeley.edu/jmh/cs186/f02/lecs/lec25_6up.pdf,$n$: number of transactions before crash,n,,,O(n),https://dl.acm.org/doi/pdf/10.1145/128765.128770,,,Operating Systems,,,,
149,Recovery,"No-Steal, Force",,,,"Recovery is the process of reverting back to a safe state prior to a system failure.

With a No-Steal/Force policy, the recovery algorithm will never write uncommited data to memory, but will force all commits to memory.",https://dsf.berkeley.edu/jmh/cs186/f02/lecs/lec25_6up.pdf,$n$: number of transactions before crash,n,,,,,,,Operating Systems,,,,
153,Link Analysis,Link Analysis,,,,"Unlike ""flat"" document collections, the World Wide Web is hypertext and provides considerable auxiliary information on top of the text of the web pages, such as link structure and link text. With link analysis, we take advantage of the link structure of the Web to produce a global ""importance"" ranking of every web page that helps search engines and users quickly make sense of the vast heterogeneity of the World Wide Web.",http://ilpubs.stanford.edu:8090/422/1/1999-66.pdf,"$n$: number of pages
$m$: number of hyperlinks
$z$: # of topics/categories",n,,,,,,,Combinatorics,http://snap.stanford.edu/class/cs224w-readings/borodin05pagerank.pdf,,,
,Graph Coloring,k-Graph Coloring,,,2-Graph Coloring; 3-Graph Coloring; 4-Graph Coloring; 5-Graph Coloring; #k-Graph Coloring; ,"Graph coloring is a special case of graph labeling; it is an assignment of labels traditionally called ""colors"" to elements of a graph subject to certain constraints. In this case, the number of colors we have is given as an input.",https://www.sciencedirect.com/science/article/pii/0166218X96000960/pdf?md5=0a6c305277dd00a5e798cf731f79731e&pid=1-s2.0-0166218X96000960-main.pdf,"$n$: number of vertices
$m$: number of edges
$k$: number of colors given to color the graph",n,,,O(2^n*poly(n)),https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,Omega(poly(n)),NP-hard,Combinatorics,,,,
,Graph Coloring,Chromatic Number,,,,"In this case, we wish to compute the chromatic number of a graph; that is, the smallest number of colors needed to color the graph.",https://www.sciencedirect.com/science/article/pii/0166218X96000960/pdf?md5=0a6c305277dd00a5e798cf731f79731e&pid=1-s2.0-0166218X96000960-main.pdf,"$n$: number of vertices
$m$: number of edges",n,,,O(2^n*poly(n)),https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,Omega(poly(n)),NP-hard,Combinatorics,Possibly good survey: https://www.cambridge.org/core/books/topics-in-chromatic-graph-theory/graph-colouring-algorithms/0057166BDF05B304D0D81D6C1EB911B6,,,
,Graph Coloring,2-Graph Coloring,,k-Graph Coloring,,"In this case, we wish to determine whether or not a graph is 2-colorable.",https://www.sciencedirect.com/science/article/pii/0166218X96000960/pdf?md5=0a6c305277dd00a5e798cf731f79731e&pid=1-s2.0-0166218X96000960-main.pdf,"$n$: number of vertices
$m$: number of edges",n,,,O(m+n),Any graph traversal algorithm,Omega(m+n),Easily derived,Combinatorics,,,,
7,Graph Coloring,3-Graph Coloring,,k-Graph Coloring,,"In this case, we wish to determine whether or not a graph is 3-colorable.",https://www.sciencedirect.com/science/article/pii/0166218X96000960/pdf?md5=0a6c305277dd00a5e798cf731f79731e&pid=1-s2.0-0166218X96000960-main.pdf,"$n$: number of vertices
$m$: number of edges",n,,,O(1.3289^n),https://www.sciencedirect.com/science/article/pii/S0196677404001117?via%3Dihub,Omega(poly(n)),NP-hard,Combinatorics,,,,
8,Graph Coloring,4-Graph Coloring,,k-Graph Coloring,,"In this case, we wish to determine whether or not a graph is 4-colorable.",https://www.sciencedirect.com/science/article/pii/0166218X96000960/pdf?md5=0a6c305277dd00a5e798cf731f79731e&pid=1-s2.0-0166218X96000960-main.pdf,"$n$: number of vertices
$m$: number of edges",n,,,O(1.7272^n),https://link.springer.com/chapter/10.1007/978-3-540-73545-8_9,Omega(poly(n)),NP-hard,Combinatorics,,,,
,Graph Coloring,5-Graph Coloring,,k-Graph Coloring,,"In this case, we wish to determine whether or not a graph is 5-colorable.",https://www.sciencedirect.com/science/article/pii/0166218X96000960/pdf?md5=0a6c305277dd00a5e798cf731f79731e&pid=1-s2.0-0166218X96000960-main.pdf,"$n$: number of vertices
$m$: number of edges",n,,,O((2-eps)^n) for some eps>0,https://drops.dagstuhl.de/opus/volltexte/2021/14182/pdf/LIPIcs-ICALP-2021-113.pdf,Omega(poly(n)),NP-hard,Combinatorics,,,,
,Graph Coloring,#k-Graph Coloring,Chromatic Polynomial,k-Graph Coloring,#2-Graph Coloring; #3-Graph Coloring; #4-Graph Coloring; #5-Graph Coloring; ,"In this case, the number of colors we have is given as an input, and we want to determine the number of all possible k-colorings of a graph. In other words, calculate the value of the chromatic polynomial of the graph with input k.",http://web.cs.elte.hu/blobs/diplomamunkak/mat/2009/hubai_tamas.pdf,"$n$: number of vertices
$m$: number of edges
$k$: number of colors given to color the graph",n,,,O(2^n*poly(n)),https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,Omega(poly(n)),#P-hard,Combinatorics,,,,
,Graph Coloring,#2-Graph Coloring,,#k-Graph Coloring,,"In this case, we wish to determine the number of all possible 2-colorings of a graph.",http://web.cs.elte.hu/blobs/diplomamunkak/mat/2009/hubai_tamas.pdf,"$n$: number of vertices
$m$: number of edges",n,,,O(m+n),Any graph traversal algorithm,Omega(m+n),Easily derived,Combinatorics,,,,
,Graph Coloring,#3-Graph Coloring,,#k-Graph Coloring,,"In this case, we wish to determine the number of all possible 3-colorings of a graph.",http://web.cs.elte.hu/blobs/diplomamunkak/mat/2009/hubai_tamas.pdf,"$n$: number of vertices
$m$: number of edges",n,,,O(1.6262^n),https://link.springer.com/chapter/10.1007/978-3-540-73545-8_9,Omega(poly(n)),#P-hard,Combinatorics,,,,
,Graph Coloring,#4-Graph Coloring,,#k-Graph Coloring,,"In this case, we wish to determine the number of all possible 4-colorings of a graph.",http://web.cs.elte.hu/blobs/diplomamunkak/mat/2009/hubai_tamas.pdf,"$n$: number of vertices
$m$: number of edges",n,,,O(1.9464^n),https://link.springer.com/chapter/10.1007/978-3-540-73545-8_9,Omega(poly(n)),#P-hard,Combinatorics,,,,
,Graph Coloring,#5-Graph Coloring,,#k-Graph Coloring,,"In this case, we wish to determine the number of all possible 5-colorings of a graph.",http://web.cs.elte.hu/blobs/diplomamunkak/mat/2009/hubai_tamas.pdf,"$n$: number of vertices
$m$: number of edges",n,,,O(2^n*poly(n)),https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,Omega(poly(n)),#P-hard,Combinatorics,,,,
,Boolean Satisfiability,SAT,Boolean Satisfiability,,Conjunctive Normal Form SAT; Disjunctive Normal Form SAT; ,Boolean satisfiability problems involve determining if there is an assignment of variables that satisfies a given boolean formula.,https://eprints.soton.ac.uk/265340/1/jpms-wodes08.pdf,$n$: number of variables,n,,,,,\Omega(\poly(n)),Cook-Levin Theorem,,,,,
,Boolean Satisfiability,Conjunctive Normal Form SAT,CNF-SAT,SAT,All-Equal-SAT; k-SAT; XOR-SAT; Horn SAT; MaxSAT; ,"CNF-SAT restricts the boolean formula to conjunctive normal form (CNF), meaning it is the AND of ORs.",https://dl.acm.org/doi/pdf/10.1145/2925416,$n$: number of variables,n,,,,,\Omega(\poly(n)),Cook-Levin Theorem,,,,,
,Boolean Satisfiability,Disjunctive Normal Form SAT,DNF-SAT,SAT,,"DNF-SAT restricts the boolean formula to disjunctive normal form (DNF), meaning it is the OR of ANDs.",https://link.springer.com/content/pdf/10.1007/BF00996269.pdf,$n$: number of variables,n,,,\poly(n),Trivial--only need one clause to be satisfied,,,,,,,
,Boolean Satisfiability,1-in-3SAT,,3SAT,Monotone 1-in-3SAT; Monotone Not-Exactly-1-in-3SAT; ,1-in-3SAT restricts the boolean formula to CNF with 3 literals per clause and determines whether there is an assignment of variables such that exactly 1 of the 3 literals in each clause is TRUE,https://dl.acm.org/doi/pdf/10.1145/800133.804350,$n$: number of variables,n,,,,,\Omega(\poly(n)),Schaefer 1978,,,,,
,Boolean Satisfiability,Monotone 1-in-3SAT,,1-in-3SAT,,"Monotone 1-in-3SAT is 1-in-3SAT with the restriction that all of the literals in a clause are all positive (note: here, we don't allow clauses to be all negated literals)",https://drops.dagstuhl.de/opus/volltexte/2016/6476/pdf/LIPIcs-MFCS-2016-64.pdf,$n$: number of variables,n,,,,,\Omega(\poly(n)),,,,,,
,Boolean Satisfiability,Monotone Not-Exactly-1-in-3SAT,,1-in-3SAT,,"Monotone Not-Exactly-1-in-3SAT is Monotone 1-in-3SAT, except that rather than exactly one variable in a clause being true, it requires exactly 0, 2, or 3 of the variables in a clause being true",https://www.sciencedirect.com/science/article/pii/S1572528613000030,$n$: number of variables,n,,,\poly(n),Schaefer 1978,,,,,,,
,Boolean Satisfiability,All-Equal-SAT,,Conjunctive Normal Form SAT,,"All-Equal-SAT restricts the boolean formula to CNF and determines whether there is an assignment of variables such that, for all of the clauses, all literals have the same boolean value",https://dl.acm.org/doi/pdf/10.1145/800133.804350,$n$: number of variables,n,,,,,,,,,,,
,Boolean Satisfiability,Not-All-Equal 3-SAT (NAE 3SAT),,3SAT,Monotone Not-All-Equal 3-SAT (Monotone NAE 3SAT); ,"NAE 3SAT restricts the boolean formula to CNF with 3 literals per clause and determines whether there is an assignment of variables such that, for none of the clauses, all 3 literals have the same boolean value",https://dl.acm.org/doi/pdf/10.1145/800133.804350,$n$: number of variables,n,,,,,\Omega(\poly(n)),Schaefer 1978,,,,,
,Boolean Satisfiability,Monotone Not-All-Equal 3-SAT (Monotone NAE 3SAT),,Not-All-Equal 3-SAT (NAE 3SAT),,Monotone NAE 3SAT is NAE 3SAT with the restriction that all of the literals in a clause are either all negated or all positive,https://doi.org/10.1016/j.tcs.2020.02.010,$n$: number of variables,n,,,,,\Omega(\poly(n)),Schaefer 1978,,,,,
,Boolean Satisfiability,k-SAT,,Conjunctive Normal Form SAT,2SAT; 3SAT; 4SAT; ,k-SAT restricts the boolean formula to CNF with (at most) k literals per clause,https://dl.acm.org/doi/pdf/10.1145/3491210?casa_token=9ge17j5R2vAAAAAA:Ex4kBr0hTUo_VEVlcFUJgW3zwfdyUhGW6VyV6IxDUq9eJbxBMa8GPx0dv-AR8xyuyCKk6uie8To,"$n$: number of variables
$k$: max number of literals per clause
$c$: dependant on $k$",n,,,O(c^n),PPSZ Algorithm,\Omega(2^n),SETH,,,,,
,Boolean Satisfiability,2SAT,2-SAT,k-SAT,,2SAT restricts the boolean formula to CNF with (at most) 2 literals per clause,https://dl.acm.org/doi/pdf/10.1145/3491210?casa_token=9ge17j5R2vAAAAAA:Ex4kBr0hTUo_VEVlcFUJgW3zwfdyUhGW6VyV6IxDUq9eJbxBMa8GPx0dv-AR8xyuyCKk6uie8To,$n$: number of variables,n,,,$O(n^2)$,Trivial--Check each x_i and follow implications,,,,,,,
,Boolean Satisfiability,3SAT,3-SAT,k-SAT,1-in-3SAT; Not-All-Equal 3-SAT (NAE 3SAT); 3SAT-5; Monotone 3SAT; ,3SAT restricts the boolean formula to CNF with (at most) 3 literals per clause,https://dl.acm.org/doi/pdf/10.1145/3491210?casa_token=9ge17j5R2vAAAAAA:Ex4kBr0hTUo_VEVlcFUJgW3zwfdyUhGW6VyV6IxDUq9eJbxBMa8GPx0dv-AR8xyuyCKk6uie8To,$n$: number of variables,n,,,O(1.308^n) (Randomized),Hertli 2014,\Omega(2^n),SETH,,,,,
,Boolean Satisfiability,3SAT-5,3-SAT-5,3SAT,,3SAT-5 is 3SAT with the restriction that each variable occurs in at most 5 clauses,https://dl.acm.org/doi/pdf/10.1145/237814.237977,$n$: number of variables,n,,,,,\Omega(\poly(n)),Feige-JACM 1998,,,,,
,Boolean Satisfiability,4SAT,4-SAT,k-SAT,,4SAT restricts the boolean formula to CNF with (at most) 4 literals per clause,https://dl.acm.org/doi/pdf/10.1145/3491210?casa_token=9ge17j5R2vAAAAAA:Ex4kBr0hTUo_VEVlcFUJgW3zwfdyUhGW6VyV6IxDUq9eJbxBMa8GPx0dv-AR8xyuyCKk6uie8To,$n$: number of variables,n,,,O(1.469^n) (Randomized),Hertli 2014,\Omega(2^n),SETH,,,,,
,Boolean Satisfiability,Monotone 3SAT,,3SAT,,Monotone 3SAT is 3SAT with the restriction that all of the literals in a clause are either all negated or all positive,https://iccl.inf.tu-dresden.de/w/images/9/9d/Brandt-ECAI-2004.pdf,$n$: number of variables,n,,,,,\Omega(\poly(n)),Gold-I&C 1978,,,,,
,Boolean Satisfiability,XOR-SAT,,Conjunctive Normal Form SAT,,XOR-SAT replaces the ORs in CNF with XORs,https://doi.org/10.1016/S0166-218X(99)00032-3,$n$: number of variables,n,,,O(n^3),Gaussian Elimination,,,,,,,
,Boolean Satisfiability,Horn SAT,,Conjunctive Normal Form SAT,Dual-Horn SAT; Renamable Horn; ,"Horn SAT restricts the boolean formula to the conjunction of Horn clauses, i.e. clauses with at most one positive literal",https://doi.org/10.1016/0743-1066(84)90014-1,$n$: number of variables,n,,,\poly(n),Horn 1951,,,,,,,
,Boolean Satisfiability,Dual-Horn SAT,,Horn SAT,,"Dual-Horn SAT restricts the boolean formula to the conjunction of dual-Horn clauses, i.e. clauses with at most one negated literal",https://www.sciencedirect.com/science/article/pii/S0304397519300076?via%3Dihub,$n$: number of variables,n,,,\poly(n),Schaefer 1978,,,,,,,
,Boolean Satisfiability,Renamable Horn,,Horn SAT,,Renamable Horn asks the question whether or not there exists a subset of variables that can be negated such that the boolean formula is turned into a Horn formula,https://doi.org/10.1145%2F322047.322059,"$n$: number of variables
$m$: number of clauses",n,,,O(mn^2),Lewis 1978,,,,,,,
,Boolean Satisfiability,MaxSAT,MAX-CNF-SAT,Conjunctive Normal Form SAT,,"Given an instance of SAT represented in Conjunctive Normal Form (CNF), compute an assignment to the variables that maximizes the number of satisfied clauses.",https://eprints.soton.ac.uk/265340/1/jpms-wodes08.pdf,$n$: number of variables,n,,,,,,,,,,,
,Orthogonal Vectors,OV,2-OV,k-OV,Unbalanced OV; ,"Given $n$ vectors in $\{0,1\}^{O(\log n)}$, are two of them orthogonal?",https://epubs.siam.org/doi/epdf/10.1137/1.9781611975482.2,"$n$: number of vectors
$d$: dimension of each vector; $d = O(log(n))$ typically",,,,$O(n^{2-1/O(d/log(n)))})$,https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch87,\Omega(n^{2-o(1)}),2-OV Hypothesis,,,,,
,Orthogonal Vectors,k-OV,,,OV; 3-OV; ,"Given $k$ sets of $d$-dimensional vectors $A_1, A_2, \ldots, A_k$, each of size $n$, does there exist $a_1 \in A_1, a_2 \in A_2, \ldots, a_k \in A_k$ such that $a_1 * a_2 * \ldots * a_k = 0$?",https://drops.dagstuhl.de/opus/volltexte/2018/9031/pdf/LIPIcs-ICALP-2018-27.pdf,"$n$: number of vectors per set
$k$: number of sets
$d$: dimension of each vector; $d = omega(log(n))$",,,,$O(n^{k-1/O(d/log(n)))})$,https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch87,\Omega(n^{k-o(1)}),k-OV Hypothesis,,,,,
,Orthogonal Vectors,3-OV,,k-OV,,"Given 3 sets of $d$-dimensional vectors $A_1, A_2, A_3$, each of size $n$, does there exist $a_1 \in A_1, a_2 \in A_2, a_3 \in A_3$ such that $a_1 * a_2 * a_3 = 0$?",https://drops.dagstuhl.de/opus/volltexte/2018/9031/pdf/LIPIcs-ICALP-2018-27.pdf,"$n$: number of vectors per set
$d$: dimension of each vector; $d = omega(log(n))$",,,,$O(n^{3-1/O(d/log(n)))})$,https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch87,\Omega(n^{3-o(1)}),3-OV Hypothesis,,,,,
,Orthogonal Vectors,Unbalanced OV,UOV,OV,,Let $0 < \alpha \leq 1$. UOV is the OV problem with the specifications that $A$ is of size $n$ and $B$ is of size $m=\Theta(n^\alpha)$ and $d\leq n^{o(1)}$.,https://arxiv.org/pdf/1502.01063.pdf,"$n$: size of $A$
$m$: size of $B$
$d$: dimensionality of vectors",,,,,,\Omega((nm)^{(1-\epsilon)}),UOVH,,,,,
,Graph Metrics,Median,,,,"Given a graph $G = (V, E)$, determine the median $m$ of the graph, where $m := \min\limits_{v\in V} \sum\limits_{u\in V} d(u, v)$",https://doi.org/10.1016/0378-8733(94)00248-9,"$V$: number of vertices
$E$: number of edges",V,,,,,,,,,,,
,Graph Metrics,Radius,,Eccentricity,,"Given a graph $G = (V, E)$, determine the radius $r$ of the graph, i.e. the minimum eccentricity over all of the vertices of the graph",https://doi.org/10.1016/0378-8733(94)00248-9,"$V$: number of vertices
$E$: number of edges",V,,,,,,,,,,,
,Graph Metrics,Diameter,,Eccentricity,Approximate Diameter; Decremental Diameter; ,"Given a graph $G = (V, E)$, determine the diameter $d$ of the graph, i.e. the maximum eccentricity over all of the vertices of the graph",https://doi.org/10.1016/0378-8733(94)00248-9,"$V$: number of vertices
$E$: number of edges",V,,,,,,,,<= has variants,,,
,Graph Metrics,Diameter 2 vs 3,4/3-Diameter,Approximate Diameter,,"Given a graph $G = (V, E)$, distinguish between diameter 2 and diameter 3. In other words, approximate diameter within a factor of $4/3-\epsilon$.",https://people.csail.mit.edu/virgi/diam.pdf,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Metrics,Diameter 3 vs 7,,Approximate Diameter,,"Given a graph $G = (V, E)$, distinguish between diameter 3 and diameter 7. In other words, approximate diameter within a factor of $9/4-\epsilon$.",https://people.csail.mit.edu/virgi/diam.pdf,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Metrics,Approximate Diameter,,Diameter,Diameter 2 vs 3; Diameter 3 vs 7; ,"Given a graph $G = (V, E)$, approximate the diameter within a given factor.",https://people.csail.mit.edu/virgi/diam.pdf,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Metrics,Decremental Diameter,,Diameter,1-sensitive decremental diameter; constant sensitivity (4/3)-approximate incremental diameter; ,"Determine the diameter of a graph decrementally, i.e. by removing edges and querying the resulting graph.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Metrics,1-sensitive (4/3)-approximate decremental diameter,,1-sensitive decremental diameter,,"Approximate the diameter of a graph decrementally within a factor of 4/3, with a sensativity of 1, i.e. when a single edge is removed.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Metrics,1-sensitive decremental diameter,,Decremental Diameter,1-sensitive (4/3)-approximate decremental diameter; ,"Determine the diameter of a graph decrementally, with a sensativity of 1, i.e. when a single edge is removed.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Metrics,constant sensitivity (4/3)-approximate incremental diameter,,Decremental Diameter,,"Approximate the diameter of a graph decrementally within a factor of 4/3, with a constant sensitivity of $K(\epsilon, t)$, i.e. when a $K(\epsilon, t)$ edges are removed.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Metrics,1-sensitive (4/3)-approximate decremental eccentricity,,Eccentricity,,"Approximate the eccentricity of a graph decrementally within a factor of 4/3, with a sensativity of 1, i.e. when a single edge is removed.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Eccentricity,,,Radius; Diameter; 1-sensitive (4/3)-approximate decremental eccentricity; ,"Given a graph $G = (V, E)$ and a vertex $v \in V$, calculate the eccentricity $\epsilon(v) := \max \limits_{u\in V} d(u, v)$",https://doi.org/10.1016/0378-8733(94)00248-9,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,All-Nodes Median Parity,,,,"Given a graph $G = (V, E)$, compute $Med(v) (\mod 2)$ for all $v\in V$, where $Med(v) := \sum\limits_{w\in V} d(v, w)$",https://epubs.siam.org/doi/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Betweenness Centrality,BC,,Approximate Betweenness Centrality; Positive Betweenness Centrality; ,"Given a graph $G = (V, E)$ and a vertex $v \in V$, calculate the betweenness centrality of vertex $v$ (or the proportion of shortest paths that go through $v$), i.e. $BC(v) := \sum\limits_{s\neq t \neq v \in V} \frac{\sigma_{st}(v)}{\sigma_{st}}$ where $\sigma_{st}(v)$ is the number of shortest paths from $s$ to $t$ that go through $v$ and $\sigma_{st}$ is the number of shortest paths from $s$ to $t$.",https://doi.org/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Approximate Betweenness Centrality,,Betweenness Centrality,,"Given a graph $G = (V, E)$ and a vertex $v \in V$, approximate the betweenness centrality of vertex $v$",https://epubs.siam.org/doi/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Positive Betweenness Centrality,,Betweenness Centrality,Directed All-Nodes Positive Betweenness Centrality; Undirected All-Nodes Positive Betweenness Centrality; ,"Given a graph $G=(V,E)$ and a vertex $v \in V$, determine whether the betweenness centrality of $v$ is positive.",https://doi.org/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Directed All-Nodes Positive Betweenness Centrality,,Positive Betweenness Centrality,,"Given a directed graph, determine whether the betweenness centrality of all nodes is positive.",https://doi.org/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Undirected All-Nodes Positive Betweenness Centrality,,Positive Betweenness Centrality,,"Given an undirected graph, determine whether the betweenness centrality of all nodes is positive.",https://doi.org/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Reach Centrality,,,Directed All-Nodes Reach Centrality; Undirected All-Nodes Reach Centrality; Approximate Reach Centrality; ,The reach centrality of a node $w$ is the smallest distance $r$ such that any $s-t$ shortest path passing through $w$ has either $s$ or $t$ in the ball of radius $r$ around $w$.,https://epubs.siam.org/doi/epdf/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Directed All-Nodes Reach Centrality,,Reach Centrality,,"The reach centrality of a node $w$ is the smallest distance $r$ such that any $s-t$ shortest path passing through $w$ has either $s$ or $t$ in the ball of radius $r$ around $w$.

Directed All-Nodes Reach Centrality is the version of the problem in a directed graph where you must calculate the reach centrality of each node.",https://epubs.siam.org/doi/epdf/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Undirected All-Nodes Reach Centrality,,Reach Centrality,,"The reach centrality of a node $w$ is the smallest distance $r$ such that any $s-t$ shortest path passing through $w$ has either $s$ or $t$ in the ball of radius $r$ around $w$.

Undirected All-Nodes Reach Centrality is the version of the problem in an undirected graph where you must calculate the reach centrality of each node.",https://epubs.siam.org/doi/epdf/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Vertex Centrality,Approximate Reach Centrality,,Reach Centrality,,"The reach centrality of a node $w$ is the smallest distance $r$ such that any $s-t$ shortest path passing through $w$ has either $s$ or $t$ in the ball of radius $r$ around $w$.

Approximate reach centrality is the approximation version of the problem.",https://epubs.siam.org/doi/epdf/10.1137/1.9781611973730.112,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Triangle Problems,Negative Triangle Detection,,Triangle Detection,Negative Triangle Search; ,"Given an $n$ node graph $G = (V, E)$ with edge weights $w: E \rightarrow W$, determine whether there is a negative triangle, i.e. three vertices that form a triangle with total edge weights summing to a negative number.",https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Triangle Problems,Negative Triangle Search,,Negative Triangle Detection,Negative Triangle Listing; ,"Given an $n$ node graph $G = (V, E)$ with edge weights $w: E \rightarrow W$, find a negative triangle, i.e. three vertices that form a triangle with total edge weights summing to a negative number.",https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Triangle Problems,Negative Triangle Listing,,Negative Triangle Search,,"Given an $n$ node graph $G = (V, E)$ with edge weights $w: E \rightarrow W$, list the negative triangles, i.e. three vertices that form a triangle with total edge weights summing to a negative number.",https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Triangle Problems,Nondecreasing Triangle,,Triangle Detection,,"Given a tripartite graph with partitions $I, J, K$ and real edge weights, find a triangle $i \in I, j \in J, k \in K$ such that $w(i, k) \leq w(k, j) \leq w(i, j)$.",https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Triangle Problems,Minimum Triangle,,Triangle Detection,,Find the triangle in a graph with minimum weight,https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Triangle Problems,Triangle in Unweighted Graph,,Triangle Detection,,Find a triangle in an unweighted graph,https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Triangle Problems,Triangle Detection,,,Negative Triangle Detection; Nondecreasing Triangle; Minimum Triangle; Triangle in Unweighted Graph; Triangle Collection*; ,Determine whether or not there is a triangle in a given graph,https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Graph Triangle Problems,Triangle Collection*,TC*,Triangle Detection,,See Definition 3 of reference.,https://arxiv.org/abs/1602.06705,"$n$: number of nodes
$m$: number of edges",n,,,,,,,,,,,
,Metricity,Metricity,,,,"Given an $n\times n$ nonnegative matrix $A$, determine whether $A$ defines a metric on $[n]$, that is, that A is symmetric, has 0s on the diagonal, and its entries satisfy the triangle inequality.",https://dl.acm.org/doi/pdf/10.1145/3186893,$n$: dimensionality of matrix,n^2,,,,,,,,,,,
,Frechet Distance,Frechet Distance,,,,"Intuitively, the (continuous) Fréchet distance of two curves $P, Q$ is the minimal length of a leash required to connect a dog to its owner, as they walk along $P$ or $Q$, respectively, without backtracking. ",https://people.mpi-inf.mpg.de/~kbringma/paper/2014FOCS.pdf,"$n$: length of first curve
$m$: length of second curve","m,n",,,,,,,,,,,
,Dynamic Time Warping,Dynamic Time Warping,DTW,,,"Fix a metric space $(M, d)$. A sequence of points in $M$ is called a curve. Consider two curves $x, y$ of length $n, m (n \geq m)$. We may traverse $x$ and $y$ by starting in their first entries, in any time step advancing to the next entry in $x$ or $y$ or both, and ending in their last entries. The cost of such a traversal is the sum over all points in time of the distance between the current entries. The dynamic time warping distance of $x$ and $y$ is the minimal cost of any traversal.",https://arxiv.org/pdf/1502.01063.pdf,"$n$: length of first curve
$m$: length of second curve","m,n",,,,,,,,,,,
,Partial Match,Partial Match,,,,"In the Partial Match problem, we are given a ""database"" of $n$ binary strings, and a list of $n$ ""queries"" which are strings in $\{0,1,?\}^*$. (Here, ""?"" represents a wildcard.) We say that a query $q=q_1,...,q_d$ matches a string $x=x_1,...,x_d$ if for all $i=1,...,d$, if $q_i$ in $\{0,1\}$ then $q_i = x_i$.
Output: Determine for all $n$ queries, which of them match some string in the database.",https://people.csail.mit.edu/virgi/6.s078/lecture6-post.txt,"$n$: number of binary strings/queries
$d$: length of strings/queries",nd,,,,,$\Omega(n^{2-\epsilon}*\poly(d))$,Reduction #9,,,,,
,Geometric Incidence Problems,3 Points on Line,,,,"Given a set of points in the plane, is there a line that contains at least three of the points?",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of points,n,,,,,,,,,,,
,Geometric Incidence Problems,Point on 3 Lines,,,,"Given a set of lines in the plane, is there a point that lies on at least three of them?",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of lines,n,,,,,,,,,,,
,Geometric Separator Problems,Separator1,,,,"Given a set $S$ of $n$ possible half-infinite, closed horizontal line segments, is there a non-horizontal separator?

Separator definition: Given a set $S$ of $n$ objects in the plane, we call a line $l$ a separator of $S$ if $l$ does not intersect any object in $S$ and both halfplanes bounded by $l$ contain a non-empty subset of the objects in $S$.",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of line segments,n,,,,,,,,,,,
,Geometric Separator Problems,Separator2,,,,"Given a set $S$ of $n$ closed, non-intersecting (nor touching), axis-parallel line segments, is there a separator?",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of line segments,n,,,,,,,,,,,
,Geometric Covering Problems,Strips Cover Box,,,,"Given a set of strips in the plane, does their union contain a given axis-parallel rectangle?",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of strips,n,,,,,,,,,,,
,Geometric Covering Problems,Triangles Cover Triangle,,,,"Given a set of triangles in the plane, does their union contain another given triangle?",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of triangles,n,,,,,,,,,,,
,Geometric Covering Problems,Hole in Union,,,,"Given a set of triangles in the plane, does their union contain a hole?",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of triangles,n,,,,,,,,,,,
,Geometric Covering Problems,Triangle Measure,,,,"Given a set of triangles in the plane, compute the measure of their union.",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of triangles,n,,,,,,,,,,,
,Geometric Covering Problems,Point Covering,,,,"Given a set of $n$ halfplanes and a number $k$, determine whether there is a point $p$ that is covered by at least $k$ of the halfplanes.",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of halfplanes,n,,,,,,,,,,,
,Geometric Covering Problems,Max-Weight Rectangle,,,,"Given $n$ weighted points (positive or negative) in $d \geq 2$ dimensions, what is the axis-aligned box which maximizes the total weight of the points it contains?",https://arxiv.org/pdf/1602.05837.pdf,"$n$: number of points
$d$: dimensionality of space",n,,,O(n^d),https://doi.org/10.1016/j.ipl.2014.03.007,\Omega(n^d),https://arxiv.org/pdf/1602.05837.pdf,,,,,
,Geometric Covering Problems,Weighted Depth,,,,"Given a set of $n$ weighted axis-parallel boxes in $d$-dimensional space $\mathbb{R}^d$, find a point $p \in \mathbb{R}^d$ that maximizes the sum of the weights of the boxes containing $p$.",https://arxiv.org/pdf/1602.05837.pdf,"$n$: number of boxes
$d$: dimensionality of space",n,,,O(n^{d/2}),https://doi.org/10.1109/FOCS.2013.51,\Omega(n^{d/2}),https://arxiv.org/pdf/1602.05837.pdf,,,,,
,Geometric Visibility Problems,Visibility Between Segments,,,,"Given a set $S$ of $n$ horizontal line segments in the plane and two particular horizontal segments $s_1$ and $s_2$, determine whether there are points on $s_1$ and $s_2$ that can see each other, that is, such that the open segment between the points does not intersect any segment in $S$.",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of horizontal line segments,n,,,,,,,,,,,
,Geometric Visibility Problems,Visibility From Infinity,,,,"Given a set $S$ of axis-parallel line segments in the plane and one particular horizontal segments $s$, determine whether there is a point on $s$ that can be seen from infinity, that is, whether there exists an infinite ray starting at the point on $s$ that does not intersect any segment.",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of axis-parallel line segments,n,,,,,,,,,,,
,Geometric Visibility Problems,Visible Triangle,,,,"Given a set $S$ of opaque horizontal triangles, another horizontal triangle $t$ and a viewpoint $p$, is there a point on $t$ that can be seen from $p$?",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of opaque horizontal triangles,n,,,,,,,,,,,
,Motion Planning Problems,Planar Motion Planning,,,,"Given a set of non-intersecting, non-touching, axis-parallel line segment obstacles in the plane and a line segment robot (a rod or ladder), determine whether the rod can be moved (allowing both translation and rotation) from a given source to a given goal configuration without colliding with the obstacles.",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of line segment obstacles,n,,,O(n^2),https://link.springer.com/content/pdf/10.1007/3-540-52846-6_81.pdf,,,,,,,
,Motion Planning Problems,3D Motion Planning,,,,"Given a set of horizontal (that is, parallel to the xy-plane) non-intersecting, non-touching triangle obstacles in 3-space, and a vertical line segment as a robot, determine whether the robot can be moved, using translations only, from a source to a goal position without colliding with the obstacles.",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of triangle obstacles,n,,,O(n^2 \log n),"Y. Ke and J. O'Rourke, An algorithm for moving a ladder in three dimensions, 1987",,,,,,,
,Geometric Base,Geometric Base,GeomBase,,,"Given a set of $n$ points with integer coordinates on three horizontal lines $y = 0, y = 1$, and $y = 2$, determine whether there exists a non-horizontal line containing three of the points",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of points,n,,,,,,,,,,,
,Local Alignment,Local Alignment,,,Multiple Local Alignment; ,"Given two input strings and a scoring function on pairs of letters, one is asked to find the substrings of the two input strings that are most similar under the scoring function.",https://link.springer.com/chapter/10.1007/978-3-662-43948-7_4,$n$: length of input strings,n,,,,,,,,,,,
,Local Alignment,Multiple Local Alignment,,Local Alignment,,"Given $k$ input strings and a scoring function on pairs of letters, one is asked to find the substrings of the $k$ input strings that are most similar under the scoring function.",https://link.springer.com/chapter/10.1007/978-3-662-43948-7_4,"$k$: number of input strings
$n$: length of input strings",kn,,,,,,,,,,,
,Minimum Witness,Minimum Witness Finding,,,All Pairs Minimum Witness; ,"Fix an instance of negative triangle with node sets $I, J, K$ and weight function $w$. Let $i \in I, j \in J, k \in K$. Recall that the triple $(i, j, k)$ is a negative triangle iff $(w(i, k) \odot w(k, j)) + w(i, j) < 0$. Fix a total ordering $<$ on the nodes in $K$ in the negative triangle instance. For any $i \in I, j \in J$, a node $k \in K$ is called a minimum witness for $(i, j)$ if $(i, j, k)$ is a negative triangle but $(i, j, k')$ is not a negative triangle for all $k' < k$ according to the ordering.

Minimum Witness Finding is the problem of finding a negative triangle $(i,j,k)$ such that $k$ is a minimum witness for $(i,j)$.",https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Minimum Witness,All Pairs Minimum Witness,APMW,Minimum Witness Finding,,"Fix an instance of negative triangle with node sets $I, J, K$ and weight function $w$. Let $i \in I, j \in J, k \in K$. Recall that the triple $(i, j, k)$ is a negative triangle iff $(w(i, k) \odot w(k, j)) + w(i, j) < 0$. Fix a total ordering $<$ on the nodes in $K$ in the negative triangle instance. For any $i \in I, j \in J$, a node $k \in K$ is called a minimum witness for $(i, j)$ if $(i, j, k)$ is a negative triangle but $(i, j, k')$ is not a negative triangle for all $k' < k$ according to the ordering.

All Pairs Minimum Witness (APMW) is the problem of finding a minimum witness $k$ for each pair $(i,k)$ if such a $k$ exists for $(i,j)$.",https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Independent Set Queries,Independent Set Queries,,,,"For a graph $G=(V,E)$ and a given subset of vertices $S\subseteq G$, answer the query of the form ""is $S$ an independent set?""",https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Price Query,Price Query,,,,"For a graph with edge weight function $c : E \rightarrow Z$, a price query is an assignment of node weights $p : V \rightarrow Z$. Such a query has a yes answer if and only if there is a $(u,v) \in E$ such that $p(u) + p(v) > c(u,v)$. (Intuitively, the $p(v)$ are “prices” on the nodes, the $c(u,v)$ are costs of producing $u$ and $v$, and a price query asks if there is an edge we are willing to “sell” at the prices given by the query.)",https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Graph Cycles,Shortest Cycle,Minimum Weight Cycle,,Shortest k-Cycle; ,"Given a graph $G=(V,E)$ with non-negative weights, find a minimum weight cycle.",https://dl.acm.org/doi/pdf/10.1145/3186893,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Graph Cycles,Shortest k-Cycle,Minimum Weight k-Cycle,Shortest Cycle,,"Given a graph $G=(V,E)$ with non-negative weights, find a minimum weight cycle of length $k$.",https://arxiv.org/pdf/1712.08147v2.pdf,"$n$: number of vertices
$m$: number of edges
$k$: length of cycle",,,,,,,,,,,,
,Matrix-Vector Multiplication,Online Matrix-Vector Multiplication,OMv,,,"We are given an $n \times n$ matrix $M$ and will receive $n$ column-vectors of size $n$, denoted by $v_1, \ldots , v_n$, one by one. After seeing each vector $v_i$, we have to output the product $Mv_i$ before we can see the next vector.",https://doi.org/10.1145/2746539.2746609,"$n$: dimension of square matrix, number of vectors, size of vectors",,,,"O(n^3 / (log n)^2) deterministic, O(n^3 / 2^(Omega(sqrt(log n)))) randomized",https://epubs.siam.org/doi/abs/10.1137/1.9781611974782.142,$\Omega(n^{3-\epsilon})$ for any $\epsilon > 0$,OMV Hypothesis,,,,,
,Matrix-Vector Multiplication,Online Vector-Matrix-Vector Multiplication,OuMv,,,"Let $M$ be a binary $n \times n$ matrix than can be preprocessed. After preprocessing $n$ vector pairs $(u^1, v^1), \ldots, (u^n, v^n)$, arrive one at a time and the task is to compute $(u^i)^T M v^i$ before being presented with the $i+1$th vector pair for every $i$.",https://doi.org/10.1145/2746539.2746609,"$n$: dimension of square matrix, number of vector pairs, size of vectors",,,,,,$\Omega(n^{3-\epsilon})$,https://arxiv.org/pdf/1602.06705.pdf,,,,,
,Vertex Reachability,#SSR,,,sensitive incremental #SSR; ,Calculate the number of nodes reachable from a given single source,https://ieeexplore.ieee.org/abstract/document/6979028?casa_token=daaoBjrHUa4AAAAA:DCjk_WMWZ5Is6KvGpmS8a2bL9LskvV0P1zEG4U2u-Tm_C8sixu1w65OpTyjml1HEpaikXhtYsg,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Vertex Reachability,sensitive incremental #SSR,,#SSR,,"A data structure with sensitivity $d$ for a problem $P$ has the following properties: It obtains an instance $p$ of $P$ and is allowed polynomial preprocessing time on $p$. After the preprocessing, the data structure must provide the following operations:

(Batch) Update: Up to $d$ changes are performed to the initial problem instance $p$, e.g., $d$ edges are added to or removed from $p$.

Query: The user queries a specific property about the instance of the problem after the last update, e.g., the shortest path between two nodes avoiding the edges deleted in the last update.

In the incremental version of these problems, the batch update adds edges to $p$.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of vertices
$m$: number of edges
$d$: sensitivity",n,,,,,,,,,,,
,Vertex Reachability,ST-Reach,,,constant sensitivity incremental ST-Reach; 1-sensitive incremental ss-reach; 2-sensitive incremental st-reach; ap-reach; ,"Given a graph $G=(V,E)$, determine whether each node $s\in S\subseteq V$ can reach a node $t\in T \subseteq V$.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Vertex Reachability,st-Reach,,,constant sensitivity incremental ST-Reach; 1-sensitive incremental ss-reach; 2-sensitive incremental st-reach; ap-reach; ,"Given a directed graph $G=(V,E)$ and vertices $s, t \in V$, determine wheteher $t$ is reachable from $s$.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Vertex Reachability,constant sensitivity incremental ST-Reach,,ST-Reach,,"Given a graph $G=(V,E)$, incrementally determine whether each node $s\in S\subseteq V$ can reach a node $t\in T \subseteq V$, with a constant sensitivity of $K(\epsilon, t)$, i.e. when $K(\epsilon, t)$ edges are added.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Vertex Reachability,1-sensitive incremental ss-reach,,st-Reach,,"Given a directed graph $G=(V,E)$ and a source node $s \in G$, an incremental single-source reachability algorithm maintains the set of nodes reachable from $s$ (i.e., all nodes $v$ for which there is a path from $s$ to $v$ in the current version of $G$) during a sequence of edge insertions, with sensitivity 1, i.e. when 1 edge is inserted.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Vertex Reachability,2-sensitive incremental st-reach,,st-Reach,,"Given a directed graph $G=(V,E)$ and vertices $s, t \in V$, incrementally determine wheteher $t$ is reachable from $s$, with sensitivity 2, i.e. when 2 edges are added.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,Vertex Reachability,ap-reach,,st-Reach,,"Given a directed graph $G=(V,E)$, determine for each pair $s \neq t \in V$ whether $t$ is reachable from $s$.",https://arxiv.org/pdf/1703.01638.pdf,"$n$: number of vertices
$m$: number of edges",n,,,,,,,,,,,
,RNA Folding,RNA Folding,,,,"In RNA Folding we are given a string over some alphabet (e.g. $\{A, C, G, T\}$) with a fixed pairing between its symbols (e.g. $A − T$ match and $C − G$ match), and the goal is to compute the maximum number of non-crossing arcs between matching letters that one can draw above the string (which corresponds to the minimum energy folding in two dimensions).",https://ieeexplore.ieee.org/iel7/8100284/8104011/08104058.pdf?casa_token=tuNJo01Tyh0AAAAA:VuzSKuC4fDZ_f7O99-O062M2xCFl8qZqUr1BjNKgzWI6rp9Ij6-NXHZvpi16JN_jEucLmPI,$n$: length of the given string,n,,,,,,,,,,,
,Maximum Inner Product Search,Maximum Inner Product Search,MIPS,,,"Given a new query $q$, MIPS targets at retrieving the datum having the largest inner product with $q$ from the database $A$. Formally, the MIPS problem is formulated as below:

$p = \arg \max \limits_{a \in A} a \top q$",https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Shen_Learning_Binary_Codes_ICCV_2015_paper.pdf,,,,,,,,,,,,,
,Model-Checking Problem,Reachability in MDPs,,,Disjunctive Reachability Queries in MDPs; Conjunctive Reachability Queries in MDPs; ,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a Markov Decision Process (MDP), and the objective is reachability: given a set of target vertices $T\subseteq V$, determine whether there is an infinite path that visits a vertex in $T$ at least once (i.e. you want to reach some vertex in $T$).",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Model-Checking Problem,Disjunctive Reachability Queries in MDPs,,Reachability in MDPs,,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a Markov Decision Process (MDP), and the objective is reachability: given a set of target vertices $T\subseteq V$, determine whether there is an infinite path that visits a vertex in $T$ at least once (i.e. you want to reach some vertex in $T$).

Furthermore, given $k$ reachability objectives, the disjunctive reachability query question asks whether there is a strategy for player 1 to ensure that one of the reachability objectives is satisfied with probability 1.

Disjunctive queries do not coincide with disjunctive objectives on MDPs.",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Model-Checking Problem,Conjunctive Reachability Queries in MDPs,Generalized Reachability in MDPs,Reachability in MDPs,,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a Markov Decision Process (MDP), and the objective is reachability: given a set of target vertices $T\subseteq V$, determine whether there is an infinite path that visits a vertex in $T$ at least once (i.e. you want to reach some vertex in $T$).

Furthermore, given $k$ reachability objectives, the conjunctive reachability query question asks whether there is a strategy for player 1 to ensure that all the reachability objectives are satisfied with probability 1.

Conjunctive queries coincide with conjunctive objectives on graphs and MDPs.",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Model-Checking Problem,Safety in MDPs,,Safety in Graphs,Disjunctive Safety Queries in MDPs; Conjunctive Safety Queries in MDPs; ,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a Markov Decision Process (MDP), and the objective is safety: given a set of target vertices $T\subseteq V$, determine whether there is an infinite path that does not visit any vertex in $T$ (i.e. you want to avoid all vertices in $T$).",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Model-Checking Problem,Disjunctive Safety Queries in MDPs,,Safety in MDPs,,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a Markov Decision Process (MDP), and the objective is safety: given a set of target vertices $T\subseteq V$, determine whether there is an infinite path that does not visit any vertex in $T$ (i.e. you want to avoid all vertices in $T$).

Furthermore, given $k$ safety objectives, the disjunctive safety query question asks whether there is a strategy for player 1 to ensure that one of the safety objectives is satisfied with probability 1.

Disjunctive queries do not coincide with disjunctive objectives on MDPs.",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Model-Checking Problem,Conjunctive Safety Queries in MDPs,,Safety in MDPs,,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a Markov Decision Process (MDP), and the objective is safety: given a set of target vertices $T\subseteq V$, determine whether there is an infinite path that does not visit any vertex in $T$ (i.e. you want to avoid all vertices in $T$).

Furthermore, given $k$ safety objectives, the conjunctive safety query question asks whether there is a strategy for player 1 to ensure that all the safety objectives are satisfied with probability 1.

Conjunctive queries coincide with conjunctive objectives on graphs and MDPs.",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Model-Checking Problem,Safety in Graphs,,,Safety in MDPs; Disjunctive Queries of Safety in Graphs; ,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a standard graph, and the objective is safety: given a set of target vertices $T\subseteq V$, determine whether or not there is a path that does not visit any vertex in $T$ (i.e. you want to avoid all vertices in $T$).",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Model-Checking Problem,Disjunctive Queries of Safety in Graphs,,Safety in Graphs,,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a standard graph, and the objective is safety: given a set of target vertices $T\subseteq V$, determine whether or not there is a path that does not visit any vertex in $T$ (i.e. you want to avoid all vertices in $T$).

Furthermore, in the disjunctive queries problem, you are given multiple safety objectives (i.e. multiple target sets $T_i$) and you are to determine whether or not there is a path where at least one of the safety objectives is satisfied (i.e. whether or not an infinite path avoids all vertices in at least one of the target sets).

Disjunctive queries coincide with disjunctive objectives on graphs.",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Model-Checking Problem,Disjunctive coBüchi Objectives,,,,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a standard graph, and the objective is coBüchi: given a set of target vertices $T\subseteq V$, determine whether or not there is a path that visits the set $T$ a finite amount of times.

Furthermore, in the disjunctive problem, you are given multiple coBüchi objectives (i.e. multiple target sets $T_i$) and you are to determine whether or not there is a path where at least one of the coBüchi objectives is satisfied (i.e. whether or not an infinite path visits any target set $T_i$ a finite amount of times).",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Model-Checking Problem,Generalized Büchi Games,Conjunctive Büchi Objectives,,,"Given a model of a system and an objective, the model-checking problem asks whether the model satisfies the objective.

In this case, the model is a standard graph, and the objective is Büchi: given a set of target vertices $T\subseteq V$, determine whether or not there is a path that visits the set $T$ an infinite amount of times.

Furthermore, in the conjunctive problem, you are given multiple Büchi objectives (i.e. multiple target sets $T_i$) and you are to determine whether or not there is a path where all of the Büchi objectives are satisfied (i.e. whether or not an infinite path visits all target sets $T_i$ an infinite amount of times).",https://dl.acm.org/doi/pdf/10.1145/2933575.2935304,"$n$: number of vertices
$m$: number of edges
$MEC$: O(\min(n^2, m^{1.5}))",n,,,,,,,,,,,
,Dihedral Rotation Queries,Static Dihedral Rotation Queries,,,,"Determine whether a given dihedral rotation is feasible or not, without modifying the chain.",https://doi.org/10.1016/S0925-7721(02)00156-6,$n$: number of edges in the chain,n,,,,,"preprocessing: $\Omega(n^2)$
or
query: $\Omega(n)$",https://doi.org/10.1016/S0925-7721(02)00156-6,,,,,
,Dihedral Rotation Queries,Dynamic Dihedral Rotation Queries,,,,"Determine whether a given dihedral rotation is feasible or not, and if it is, modify the chain by performing the rotation.",https://doi.org/10.1016/S0925-7721(02)00156-6,$n$: number of edges in the chain,n,,,,,"preprocessing: $\Omega(n^2)$
query: $\Omega(n)$",https://doi.org/10.1016/S0925-7721(02)00156-6,,,,,
,Bichromatic Hamming Close Pair,Bichromatic Hamming Close Pair,BHCP,,,"Given two sets $A = \{a_1, \ldots, a_n\} \subseteq \{0, 1\}^d$ and $B = \{b_1, \ldots, b_n\} \subseteq \{0, 1\}^d$ of $n$ binary vectors and an integer $t \in \{2, \ldots, d\}$, decide if there exists a pair $a \in A$ and $b \in B$ such that the number of coordinates in which they differ is less than $t$ (formally, $Hamming(a, b) := ||a − b||1 < t$). If there is such a pair $(a, b)$, we call it a close pair.",https://proceedings.neurips.cc/paper/2017/file/635440afdfc39fe37995fed127d7df4f-Paper.pdf,"$n$: number of binary vectors in each set
$d$: dimensionality of vectors
$t$: max Hamming distance",n,,,,,,,,,,,
,Support Vector Machines (SVM),Approximate Hard-Margin SVM,,,,"A (primal) hard-margin SVM is an optimization problem of the following form: 

$\min\limits_{\alpha_1,\ldots,\alpha_n\geq 0} \frac{1}{2} \sum \limits_{i,j = 1}^n \alpha_i \alpha_j y_i y_j k(x_i, x_j)$

subject to $y_i f(x_i) \geq 1, i = 1, \ldots, n$
where $f(x) := \sum_{i=1}^n \alpha_i y_i k(x_i, x)$",https://proceedings.neurips.cc/paper/2017/file/635440afdfc39fe37995fed127d7df4f-Paper.pdf,,,,,,,,,,,,,
,3SUM,3SUM,,Real 3SUM,3SUM'; All-Integers 3SUM; ,"Given a set $S$ of integers, determine whether there is a subset of $S$ of size 3 that sums to 0.",https://doi.org/10.1016/0925-7721(95)00022-2,"$S$: the set of integers
$n$: the number of integers in the set",n,,,"O(n^2/max(w/(log w)^2, (log n)^2/(log log n)^2))",https://link.springer.com/article/10.1007/s00453-007-9036-3,\Omega(n^{2-\epsilon}),3SUM Hypothesis,,,,,
,3SUM,Real 3SUM,,,3SUM; ,"Given a set $S$ of reals, determine whether there is a subset of $S$ of size 3 that sums to 0.",https://dl.acm.org/doi/abs/10.1145/3363541,"$S$: the set of reals
$n$: the number of real numbers in the set",n,,,O(n^2*(log log n)^{O(1)}/(log n)^2),https://dl.acm.org/doi/abs/10.1145/3363541,\Omega(n^{2-\epsilon}),3SUM Hypothesis,,,,,
,3SUM,3SUM',,3SUM,,"Given three sets of integers $A, B, C$ of total size $n$, are there $a\in A, b\in B, c\in C$ such that $a + b = c$?",https://doi.org/10.1016/0925-7721(95)00022-2,$n$: number of integers in each set,n,,,,,,,,,,,
,3SUM,All-Integers 3SUM,,3SUM,,"Given three lists $A, B, C$ of $n$ integers each, output the list of all integers $a \in A$ such that there exist $b \in B,c \in C$ with $a + b + c = 0$.",https://dl.acm.org/doi/pdf/10.1145/3186893,$n$: number of integers in each set,n,,,,,,,,,,,